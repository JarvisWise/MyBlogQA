<?xml version="1.0" encoding="utf-8"?>
<BugCollection sequence='0' release='' analysisTimestamp='1684085479510' version='4.7.2' timestamp='1684085455649'><Project projectName='Simple Blog Maven Webapp'><Jar>D:\Projects Store\OldGradeBookQA\target\classes</Jar><AuxClasspathEntry>C:\Users\Alex\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\org\seleniumhq\selenium\selenium-server\3.141.59\selenium-server-3.141.59.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\org\seleniumhq\selenium\selenium-java\3.141.59\selenium-java-3.141.59.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\org\seleniumhq\selenium\selenium-api\3.141.59\selenium-api-3.141.59.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\org\seleniumhq\selenium\selenium-chrome-driver\3.141.59\selenium-chrome-driver-3.141.59.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\org\seleniumhq\selenium\selenium-edge-driver\3.141.59\selenium-edge-driver-3.141.59.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\org\seleniumhq\selenium\selenium-firefox-driver\3.141.59\selenium-firefox-driver-3.141.59.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\org\seleniumhq\selenium\selenium-ie-driver\3.141.59\selenium-ie-driver-3.141.59.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\org\seleniumhq\selenium\selenium-opera-driver\3.141.59\selenium-opera-driver-3.141.59.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\org\seleniumhq\selenium\selenium-remote-driver\3.141.59\selenium-remote-driver-3.141.59.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\org\seleniumhq\selenium\selenium-safari-driver\3.141.59\selenium-safari-driver-3.141.59.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\org\seleniumhq\selenium\selenium-support\3.141.59\selenium-support-3.141.59.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\com\beust\jcommander\1.72\jcommander-1.72.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.8.15\byte-buddy-1.8.15.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\org\apache\commons\commons-exec\1.3\commons-exec-1.3.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\com\google\guava\guava\25.0-jre\guava-25.0-jre.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\com\google\code\findbugs\jsr305\1.3.9\jsr305-1.3.9.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\org\checkerframework\checker-compat-qual\2.0.0\checker-compat-qual-2.0.0.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\com\google\errorprone\error_prone_annotations\2.1.3\error_prone_annotations-2.1.3.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\com\google\j2objc\j2objc-annotations\1.1\j2objc-annotations-1.1.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.14\animal-sniffer-annotations-1.14.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\net\jcip\jcip-annotations\1.0\jcip-annotations-1.0.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\org\seleniumhq\selenium\jetty-repacked\9.4.12.v20180830\jetty-repacked-9.4.12.v20180830.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\com\squareup\okhttp3\okhttp\3.11.0\okhttp-3.11.0.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\com\squareup\okio\okio\1.14.0\okio-1.14.0.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\org\yaml\snakeyaml\1.19\snakeyaml-1.19.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\org\springframework\spring-webmvc\5.0.0.RELEASE\spring-webmvc-5.0.0.RELEASE.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\org\springframework\spring-aop\5.0.0.RELEASE\spring-aop-5.0.0.RELEASE.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\org\springframework\spring-beans\5.0.0.RELEASE\spring-beans-5.0.0.RELEASE.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\org\springframework\spring-expression\5.0.0.RELEASE\spring-expression-5.0.0.RELEASE.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\org\springframework\spring-core\5.0.0.RELEASE\spring-core-5.0.0.RELEASE.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\org\springframework\spring-jcl\5.0.0.RELEASE\spring-jcl-5.0.0.RELEASE.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\org\springframework\spring-context\5.0.0.RELEASE\spring-context-5.0.0.RELEASE.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\org\springframework\spring-web\5.0.0.RELEASE\spring-web-5.0.0.RELEASE.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\javax\servlet\javax.servlet-api\4.0.1\javax.servlet-api-4.0.1.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\org\postgresql\postgresql\9.4.1212\postgresql-9.4.1212.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\org\projectlombok\lombok\1.18.24\lombok-1.18.24.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\com\sun\mail\javax.mail\1.5.5\javax.mail-1.5.5.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\org\apache\commons\commons-text\1.10.0\commons-text-1.10.0.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\org\apache\commons\commons-lang3\3.12.0\commons-lang3-3.12.0.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.3.1\junit-jupiter-api-5.3.1.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\org\opentest4j\opentest4j\1.1.1\opentest4j-1.1.1.jar</AuxClasspathEntry><AuxClasspathEntry>C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-commons\1.3.1\junit-platform-commons-1.3.1.jar</AuxClasspathEntry><Plugin id='com.h3xstream.findsecbugs' enabled='true'></Plugin><SrcDir>D:\Projects Store\OldGradeBookQA\src\main\java</SrcDir><WrkDir>D:\Projects Store\OldGradeBookQA\target</WrkDir></Project><BugInstance instanceOccurrenceNum='0' instanceHash='b0aa1cd9714df169a4390a14371fac5' rank='12' abbrev='SECSF' category='SECURITY' priority='2' type='SPRING_FILE_DISCLOSURE' instanceOccurrenceMax='0'><ShortMessage>Spring File Disclosure</ShortMessage><LongMessage>ModelAndView populated with user controlled parameters</LongMessage><Class classname='org.simple.blog.controllers.AbstractController' primary='true'><SourceLine classname='org.simple.blog.controllers.AbstractController' start='13' end='43' sourcepath='org/simple/blog/controllers/AbstractController.java' sourcefile='AbstractController.java'><Message>At AbstractController.java:[lines 13-43]</Message></SourceLine><Message>In class org.simple.blog.controllers.AbstractController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.AbstractController' signature='(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/ModelAndView;' name='redirectToLogin' primary='true'><SourceLine endBytecode='138' classname='org.simple.blog.controllers.AbstractController' start='37' end='43' sourcepath='org/simple/blog/controllers/AbstractController.java' sourcefile='AbstractController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.AbstractController.redirectToLogin(HttpServletRequest)</Message></Method><SourceLine endBytecode='42' classname='org.simple.blog.controllers.AbstractController' start='42' end='42' sourcepath='org/simple/blog/controllers/AbstractController.java' sourcefile='AbstractController.java' startBytecode='42' primary='true'><Message>At AbstractController.java:[line 42]</Message></SourceLine><String role='Sink method' value='org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V'><Message>Sink method org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.pageName'><Message>Unknown source org/simple/blog/tools/strings/PageName.pageName</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;</Message></String><SourceLine endBytecode='39' classname='org.simple.blog.controllers.AbstractController' start='42' end='42' sourcepath='org/simple/blog/controllers/AbstractController.java' sourcefile='AbstractController.java' startBytecode='39'><Message>At AbstractController.java:[line 42]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.PageName' start='22' end='22' sourcepath='org/simple/blog/tools/strings/PageName.java' sourcefile='PageName.java' startBytecode='1'><Message>At PageName.java:[line 22]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='ccd5d18fac590d970523cbd46c353c3d' cweid='352' rank='10' abbrev='SECSPRCSRFURM' category='SECURITY' priority='1' type='SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING' instanceOccurrenceMax='0'><ShortMessage>Spring CSRF unrestricted RequestMapping</ShortMessage><LongMessage>Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks</LongMessage><Class classname='org.simple.blog.controllers.AddController' primary='true'><SourceLine classname='org.simple.blog.controllers.AddController' start='32' end='94' sourcepath='org/simple/blog/controllers/AddController.java' sourcefile='AddController.java'><Message>At AddController.java:[lines 32-94]</Message></SourceLine><Message>In class org.simple.blog.controllers.AddController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.AddController' signature='(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/ModelAndView;' name='addNewComment' primary='true'><SourceLine endBytecode='456' classname='org.simple.blog.controllers.AddController' start='78' end='94' sourcepath='org/simple/blog/controllers/AddController.java' sourcefile='AddController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.AddController.addNewComment(String, String, String, HttpServletRequest)</Message></Method><SourceLine synthetic='true' endBytecode='456' classname='org.simple.blog.controllers.AddController' start='78' end='94' sourcepath='org/simple/blog/controllers/AddController.java' sourcefile='AddController.java' startBytecode='0'><Message>At AddController.java:[lines 78-94]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='508197b63caaa8f074453f4046b8a85d' cweid='352' rank='10' abbrev='SECSPRCSRFURM' category='SECURITY' priority='1' type='SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING' instanceOccurrenceMax='0'><ShortMessage>Spring CSRF unrestricted RequestMapping</ShortMessage><LongMessage>Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks</LongMessage><Class classname='org.simple.blog.controllers.AddController' primary='true'><SourceLine classname='org.simple.blog.controllers.AddController' start='32' end='94' sourcepath='org/simple/blog/controllers/AddController.java' sourcefile='AddController.java'><Message>At AddController.java:[lines 32-94]</Message></SourceLine><Message>In class org.simple.blog.controllers.AddController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.AddController' signature='(Ljava/lang/String;Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/ModelAndView;' name='addNewPost' primary='true'><SourceLine endBytecode='348' classname='org.simple.blog.controllers.AddController' start='48' end='68' sourcepath='org/simple/blog/controllers/AddController.java' sourcefile='AddController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.AddController.addNewPost(String, String, HttpServletRequest)</Message></Method><SourceLine synthetic='true' endBytecode='348' classname='org.simple.blog.controllers.AddController' start='48' end='68' sourcepath='org/simple/blog/controllers/AddController.java' sourcefile='AddController.java' startBytecode='0'><Message>At AddController.java:[lines 48-68]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='f8cc404623043acea695b5b673b24475' rank='10' abbrev='SECSF' category='SECURITY' priority='1' type='SPRING_FILE_DISCLOSURE' instanceOccurrenceMax='0'><ShortMessage>Spring File Disclosure</ShortMessage><LongMessage>ModelAndView populated with user controlled parameters</LongMessage><Class classname='org.simple.blog.controllers.AddController' primary='true'><SourceLine classname='org.simple.blog.controllers.AddController' start='32' end='94' sourcepath='org/simple/blog/controllers/AddController.java' sourcefile='AddController.java'><Message>At AddController.java:[lines 32-94]</Message></SourceLine><Message>In class org.simple.blog.controllers.AddController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.AddController' signature='(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/ModelAndView;' name='addNewComment' primary='true'><SourceLine endBytecode='456' classname='org.simple.blog.controllers.AddController' start='78' end='94' sourcepath='org/simple/blog/controllers/AddController.java' sourcefile='AddController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.AddController.addNewComment(String, String, String, HttpServletRequest)</Message></Method><SourceLine endBytecode='107' classname='org.simple.blog.controllers.AddController' start='88' end='88' sourcepath='org/simple/blog/controllers/AddController.java' sourcefile='AddController.java' startBytecode='107' primary='true'><Message>At AddController.java:[line 88]</Message></SourceLine><String role='Sink method' value='org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V'><Message>Sink method org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Tainted source' value='org/simple/blog/controllers/AddController.addNewComment(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/ModelAndView; parameter 2'><Message>Tainted source org/simple/blog/controllers/AddController.addNewComment(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/ModelAndView; parameter 2</Message></String><SourceLine endBytecode='101' classname='org.simple.blog.controllers.AddController' start='88' end='88' sourcepath='org/simple/blog/controllers/AddController.java' sourcefile='AddController.java' startBytecode='101'><Message>At AddController.java:[line 88]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='995df6c94f08969641134d42cbd30c86' rank='12' abbrev='SECSF' category='SECURITY' priority='2' type='SPRING_FILE_DISCLOSURE' instanceOccurrenceMax='0'><ShortMessage>Spring File Disclosure</ShortMessage><LongMessage>ModelAndView populated with user controlled parameters</LongMessage><Class classname='org.simple.blog.controllers.AddController' primary='true'><SourceLine classname='org.simple.blog.controllers.AddController' start='32' end='94' sourcepath='org/simple/blog/controllers/AddController.java' sourcefile='AddController.java'><Message>At AddController.java:[lines 32-94]</Message></SourceLine><Message>In class org.simple.blog.controllers.AddController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.AddController' signature='(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/ModelAndView;' name='addNewComment' primary='true'><SourceLine endBytecode='456' classname='org.simple.blog.controllers.AddController' start='78' end='94' sourcepath='org/simple/blog/controllers/AddController.java' sourcefile='AddController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.AddController.addNewComment(String, String, String, HttpServletRequest)</Message></Method><SourceLine endBytecode='131' classname='org.simple.blog.controllers.AddController' start='91' end='91' sourcepath='org/simple/blog/controllers/AddController.java' sourcefile='AddController.java' startBytecode='131' primary='true'><Message>At AddController.java:[line 91]</Message></SourceLine><String role='Sink method' value='org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V'><Message>Sink method org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.pageName'><Message>Unknown source org/simple/blog/tools/strings/PageName.pageName</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;</Message></String><SourceLine endBytecode='128' classname='org.simple.blog.controllers.AddController' start='91' end='91' sourcepath='org/simple/blog/controllers/AddController.java' sourcefile='AddController.java' startBytecode='128'><Message>At AddController.java:[line 91]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.PageName' start='22' end='22' sourcepath='org/simple/blog/tools/strings/PageName.java' sourcefile='PageName.java' startBytecode='1'><Message>At PageName.java:[line 22]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='773140b95b592660d2c5c373057a4c2c' rank='12' abbrev='SECSF' category='SECURITY' priority='2' type='SPRING_FILE_DISCLOSURE' instanceOccurrenceMax='0'><ShortMessage>Spring File Disclosure</ShortMessage><LongMessage>ModelAndView populated with user controlled parameters</LongMessage><Class classname='org.simple.blog.controllers.AddController' primary='true'><SourceLine classname='org.simple.blog.controllers.AddController' start='32' end='94' sourcepath='org/simple/blog/controllers/AddController.java' sourcefile='AddController.java'><Message>At AddController.java:[lines 32-94]</Message></SourceLine><Message>In class org.simple.blog.controllers.AddController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.AddController' signature='(Ljava/lang/String;Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/ModelAndView;' name='addNewPost' primary='true'><SourceLine endBytecode='348' classname='org.simple.blog.controllers.AddController' start='48' end='68' sourcepath='org/simple/blog/controllers/AddController.java' sourcefile='AddController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.AddController.addNewPost(String, String, HttpServletRequest)</Message></Method><SourceLine endBytecode='113' classname='org.simple.blog.controllers.AddController' start='65' end='65' sourcepath='org/simple/blog/controllers/AddController.java' sourcefile='AddController.java' startBytecode='113' primary='true'><Message>At AddController.java:[line 65]</Message></SourceLine><String role='Sink method' value='org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V'><Message>Sink method org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.pageName'><Message>Unknown source org/simple/blog/tools/strings/PageName.pageName</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;</Message></String><SourceLine endBytecode='110' classname='org.simple.blog.controllers.AddController' start='65' end='65' sourcepath='org/simple/blog/controllers/AddController.java' sourcefile='AddController.java' startBytecode='110'><Message>At AddController.java:[line 65]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.PageName' start='22' end='22' sourcepath='org/simple/blog/tools/strings/PageName.java' sourcefile='PageName.java' startBytecode='1'><Message>At PageName.java:[line 22]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='cf2d4d6dea91bf448c01d65e1f285d8a' cweid='352' rank='10' abbrev='SECSPRCSRFURM' category='SECURITY' priority='1' type='SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING' instanceOccurrenceMax='0'><ShortMessage>Spring CSRF unrestricted RequestMapping</ShortMessage><LongMessage>Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks</LongMessage><Class classname='org.simple.blog.controllers.EditController' primary='true'><SourceLine classname='org.simple.blog.controllers.EditController' start='38' end='191' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java'><Message>At EditController.java:[lines 38-191]</Message></SourceLine><Message>In class org.simple.blog.controllers.EditController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.EditController' signature='(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/web/servlet/ModelAndView;' name='editPost' primary='true'><SourceLine endBytecode='247' classname='org.simple.blog.controllers.EditController' start='78' end='90' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.EditController.editPost(String, String)</Message></Method><SourceLine synthetic='true' endBytecode='247' classname='org.simple.blog.controllers.EditController' start='78' end='90' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='0'><Message>At EditController.java:[lines 78-90]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='89f27aeb61327680a54cdb16be593c51' cweid='352' rank='10' abbrev='SECSPRCSRFURM' category='SECURITY' priority='1' type='SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING' instanceOccurrenceMax='0'><ShortMessage>Spring CSRF unrestricted RequestMapping</ShortMessage><LongMessage>Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks</LongMessage><Class classname='org.simple.blog.controllers.EditController' primary='true'><SourceLine classname='org.simple.blog.controllers.EditController' start='38' end='191' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java'><Message>At EditController.java:[lines 38-191]</Message></SourceLine><Message>In class org.simple.blog.controllers.EditController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.EditController' signature='(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/web/servlet/ModelAndView;' name='editPost' primary='true'><SourceLine endBytecode='263' classname='org.simple.blog.controllers.EditController' start='57' end='70' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.EditController.editPost(String, String, String)</Message></Method><SourceLine synthetic='true' endBytecode='263' classname='org.simple.blog.controllers.EditController' start='57' end='70' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='0'><Message>At EditController.java:[lines 57-70]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='81051a85bd84f13bdfaec0411f3ba599' cweid='352' rank='10' abbrev='SECSPRCSRFURM' category='SECURITY' priority='1' type='SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING' instanceOccurrenceMax='0'><ShortMessage>Spring CSRF unrestricted RequestMapping</ShortMessage><LongMessage>Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks</LongMessage><Class classname='org.simple.blog.controllers.EditController' primary='true'><SourceLine classname='org.simple.blog.controllers.EditController' start='38' end='191' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java'><Message>At EditController.java:[lines 38-191]</Message></SourceLine><Message>In class org.simple.blog.controllers.EditController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.EditController' signature='(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/ModelAndView;' name='editUserCommon' primary='true'><SourceLine endBytecode='309' classname='org.simple.blog.controllers.EditController' start='157' end='167' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.EditController.editUserCommon(String, String, String, String, HttpServletRequest)</Message></Method><SourceLine synthetic='true' endBytecode='309' classname='org.simple.blog.controllers.EditController' start='157' end='167' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='0'><Message>At EditController.java:[lines 157-167]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='c02cbd63a90cfbed60e9058e0015a336' cweid='352' rank='10' abbrev='SECSPRCSRFURM' category='SECURITY' priority='1' type='SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING' instanceOccurrenceMax='0'><ShortMessage>Spring CSRF unrestricted RequestMapping</ShortMessage><LongMessage>Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks</LongMessage><Class classname='org.simple.blog.controllers.EditController' primary='true'><SourceLine classname='org.simple.blog.controllers.EditController' start='38' end='191' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java'><Message>At EditController.java:[lines 38-191]</Message></SourceLine><Message>In class org.simple.blog.controllers.EditController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.EditController' signature='(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/ModelAndView;' name='editUserCommon' primary='true'><SourceLine endBytecode='233' classname='org.simple.blog.controllers.EditController' start='174' end='191' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.EditController.editUserCommon(HttpServletRequest)</Message></Method><SourceLine synthetic='true' endBytecode='233' classname='org.simple.blog.controllers.EditController' start='174' end='191' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='0'><Message>At EditController.java:[lines 174-191]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='2fe61f1da65e666cd6ad165b70acbef2' cweid='352' rank='10' abbrev='SECSPRCSRFURM' category='SECURITY' priority='1' type='SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING' instanceOccurrenceMax='0'><ShortMessage>Spring CSRF unrestricted RequestMapping</ShortMessage><LongMessage>Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks</LongMessage><Class classname='org.simple.blog.controllers.EditController' primary='true'><SourceLine classname='org.simple.blog.controllers.EditController' start='38' end='191' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java'><Message>At EditController.java:[lines 38-191]</Message></SourceLine><Message>In class org.simple.blog.controllers.EditController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.EditController' signature='(Ljava/lang/String;)Lorg/springframework/web/servlet/ModelAndView;' name='editUserResetToken' primary='true'><SourceLine endBytecode='320' classname='org.simple.blog.controllers.EditController' start='96' end='113' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.EditController.editUserResetToken(String)</Message></Method><SourceLine synthetic='true' endBytecode='320' classname='org.simple.blog.controllers.EditController' start='96' end='113' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='0'><Message>At EditController.java:[lines 96-113]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='19dc80937733632014c13ee40c913ea2' cweid='352' rank='10' abbrev='SECSPRCSRFURM' category='SECURITY' priority='1' type='SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING' instanceOccurrenceMax='0'><ShortMessage>Spring CSRF unrestricted RequestMapping</ShortMessage><LongMessage>Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks</LongMessage><Class classname='org.simple.blog.controllers.EditController' primary='true'><SourceLine classname='org.simple.blog.controllers.EditController' start='38' end='191' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java'><Message>At EditController.java:[lines 38-191]</Message></SourceLine><Message>In class org.simple.blog.controllers.EditController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.EditController' signature='(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/web/servlet/ModelAndView;' name='resetUserPassword' primary='true'><SourceLine endBytecode='433' classname='org.simple.blog.controllers.EditController' start='122' end='146' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.EditController.resetUserPassword(String, String, String)</Message></Method><SourceLine synthetic='true' endBytecode='433' classname='org.simple.blog.controllers.EditController' start='122' end='146' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='0'><Message>At EditController.java:[lines 122-146]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='c2d4c0df115895f1c262dc6085439f43' rank='10' abbrev='SECSF' category='SECURITY' priority='1' type='SPRING_FILE_DISCLOSURE' instanceOccurrenceMax='0'><ShortMessage>Spring File Disclosure</ShortMessage><LongMessage>ModelAndView populated with user controlled parameters</LongMessage><Class classname='org.simple.blog.controllers.EditController' primary='true'><SourceLine classname='org.simple.blog.controllers.EditController' start='38' end='191' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java'><Message>At EditController.java:[lines 38-191]</Message></SourceLine><Message>In class org.simple.blog.controllers.EditController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.EditController' signature='(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/ModelAndView;' name='editUserCommon' primary='true'><SourceLine endBytecode='309' classname='org.simple.blog.controllers.EditController' start='157' end='167' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.EditController.editUserCommon(String, String, String, String, HttpServletRequest)</Message></Method><SourceLine endBytecode='66' classname='org.simple.blog.controllers.EditController' start='162' end='162' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='66' primary='true'><Message>At EditController.java:[line 162]</Message></SourceLine><String role='Sink method' value='org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V'><Message>Sink method org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Tainted source' value='org/simple/blog/controllers/EditController.editUserCommon(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/ModelAndView; parameter 1'><Message>Tainted source org/simple/blog/controllers/EditController.editUserCommon(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/ModelAndView; parameter 1</Message></String><SourceLine endBytecode='60' classname='org.simple.blog.controllers.EditController' start='162' end='162' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='60'><Message>At EditController.java:[line 162]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='b3e050462c28cac60898396d64d02346' rank='12' abbrev='SECSF' category='SECURITY' priority='2' type='SPRING_FILE_DISCLOSURE' instanceOccurrenceMax='0'><ShortMessage>Spring File Disclosure</ShortMessage><LongMessage>ModelAndView populated with user controlled parameters</LongMessage><Class classname='org.simple.blog.controllers.EditController' primary='true'><SourceLine classname='org.simple.blog.controllers.EditController' start='38' end='191' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java'><Message>At EditController.java:[lines 38-191]</Message></SourceLine><Message>In class org.simple.blog.controllers.EditController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.EditController' signature='(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/web/servlet/ModelAndView;' name='editPost' primary='true'><SourceLine endBytecode='247' classname='org.simple.blog.controllers.EditController' start='78' end='90' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.EditController.editPost(String, String)</Message></Method><SourceLine endBytecode='69' classname='org.simple.blog.controllers.EditController' start='88' end='88' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='69' primary='true'><Message>At EditController.java:[line 88]</Message></SourceLine><String role='Sink method' value='org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V'><Message>Sink method org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.pageName'><Message>Unknown source org/simple/blog/tools/strings/PageName.pageName</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;</Message></String><SourceLine endBytecode='66' classname='org.simple.blog.controllers.EditController' start='88' end='88' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='66'><Message>At EditController.java:[line 88]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.PageName' start='22' end='22' sourcepath='org/simple/blog/tools/strings/PageName.java' sourcefile='PageName.java' startBytecode='1'><Message>At PageName.java:[line 22]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='58ef2d25b2f1e2d8096a1e0d2d2d3ff0' rank='12' abbrev='SECSF' category='SECURITY' priority='2' type='SPRING_FILE_DISCLOSURE' instanceOccurrenceMax='0'><ShortMessage>Spring File Disclosure</ShortMessage><LongMessage>ModelAndView populated with user controlled parameters</LongMessage><Class classname='org.simple.blog.controllers.EditController' primary='true'><SourceLine classname='org.simple.blog.controllers.EditController' start='38' end='191' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java'><Message>At EditController.java:[lines 38-191]</Message></SourceLine><Message>In class org.simple.blog.controllers.EditController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.EditController' signature='(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/web/servlet/ModelAndView;' name='editPost' primary='true'><SourceLine endBytecode='263' classname='org.simple.blog.controllers.EditController' start='57' end='70' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.EditController.editPost(String, String, String)</Message></Method><SourceLine endBytecode='71' classname='org.simple.blog.controllers.EditController' start='68' end='68' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='71' primary='true'><Message>At EditController.java:[line 68]</Message></SourceLine><String role='Sink method' value='org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V'><Message>Sink method org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.pageName'><Message>Unknown source org/simple/blog/tools/strings/PageName.pageName</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;</Message></String><SourceLine endBytecode='68' classname='org.simple.blog.controllers.EditController' start='68' end='68' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='68'><Message>At EditController.java:[line 68]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.PageName' start='22' end='22' sourcepath='org/simple/blog/tools/strings/PageName.java' sourcefile='PageName.java' startBytecode='1'><Message>At PageName.java:[line 22]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='57bf04e3f9f4c4ded09cb45ce04018c8' rank='12' abbrev='SECSF' category='SECURITY' priority='2' type='SPRING_FILE_DISCLOSURE' instanceOccurrenceMax='0'><ShortMessage>Spring File Disclosure</ShortMessage><LongMessage>ModelAndView populated with user controlled parameters</LongMessage><Class classname='org.simple.blog.controllers.EditController' primary='true'><SourceLine classname='org.simple.blog.controllers.EditController' start='38' end='191' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java'><Message>At EditController.java:[lines 38-191]</Message></SourceLine><Message>In class org.simple.blog.controllers.EditController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.EditController' signature='(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/ModelAndView;' name='editUserCommon' primary='true'><SourceLine endBytecode='309' classname='org.simple.blog.controllers.EditController' start='157' end='167' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.EditController.editUserCommon(String, String, String, String, HttpServletRequest)</Message></Method><SourceLine endBytecode='90' classname='org.simple.blog.controllers.EditController' start='165' end='165' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='90' primary='true'><Message>At EditController.java:[line 165]</Message></SourceLine><String role='Sink method' value='org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V'><Message>Sink method org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.pageName'><Message>Unknown source org/simple/blog/tools/strings/PageName.pageName</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;</Message></String><SourceLine endBytecode='87' classname='org.simple.blog.controllers.EditController' start='165' end='165' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='87'><Message>At EditController.java:[line 165]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.PageName' start='22' end='22' sourcepath='org/simple/blog/tools/strings/PageName.java' sourcefile='PageName.java' startBytecode='1'><Message>At PageName.java:[line 22]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='dbb1f9bb430b7f82dc8f70923d54f498' rank='12' abbrev='SECSF' category='SECURITY' priority='2' type='SPRING_FILE_DISCLOSURE' instanceOccurrenceMax='0'><ShortMessage>Spring File Disclosure</ShortMessage><LongMessage>ModelAndView populated with user controlled parameters</LongMessage><Class classname='org.simple.blog.controllers.EditController' primary='true'><SourceLine classname='org.simple.blog.controllers.EditController' start='38' end='191' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java'><Message>At EditController.java:[lines 38-191]</Message></SourceLine><Message>In class org.simple.blog.controllers.EditController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.EditController' signature='(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/ModelAndView;' name='editUserCommon' primary='true'><SourceLine endBytecode='233' classname='org.simple.blog.controllers.EditController' start='174' end='191' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.EditController.editUserCommon(HttpServletRequest)</Message></Method><SourceLine endBytecode='75' classname='org.simple.blog.controllers.EditController' start='190' end='190' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='75' primary='true'><Message>At EditController.java:[line 190]</Message></SourceLine><String role='Sink method' value='org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V'><Message>Sink method org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.pageName'><Message>Unknown source org/simple/blog/tools/strings/PageName.pageName</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;</Message></String><SourceLine endBytecode='72' classname='org.simple.blog.controllers.EditController' start='190' end='190' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='72'><Message>At EditController.java:[line 190]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.PageName' start='22' end='22' sourcepath='org/simple/blog/tools/strings/PageName.java' sourcefile='PageName.java' startBytecode='1'><Message>At PageName.java:[line 22]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='1a69b4ba54cdc8fd77503ec2a3ef146f' rank='12' abbrev='SECSF' category='SECURITY' priority='2' type='SPRING_FILE_DISCLOSURE' instanceOccurrenceMax='1'><ShortMessage>Spring File Disclosure</ShortMessage><LongMessage>ModelAndView populated with user controlled parameters</LongMessage><Class classname='org.simple.blog.controllers.EditController' primary='true'><SourceLine classname='org.simple.blog.controllers.EditController' start='38' end='191' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java'><Message>At EditController.java:[lines 38-191]</Message></SourceLine><Message>In class org.simple.blog.controllers.EditController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.EditController' signature='(Ljava/lang/String;)Lorg/springframework/web/servlet/ModelAndView;' name='editUserResetToken' primary='true'><SourceLine endBytecode='320' classname='org.simple.blog.controllers.EditController' start='96' end='113' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.EditController.editUserResetToken(String)</Message></Method><SourceLine endBytecode='105' classname='org.simple.blog.controllers.EditController' start='108' end='108' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='105' primary='true'><Message>At EditController.java:[line 108]</Message></SourceLine><String role='Sink method' value='org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V'><Message>Sink method org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.pageName'><Message>Unknown source org/simple/blog/tools/strings/PageName.pageName</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;</Message></String><SourceLine endBytecode='102' classname='org.simple.blog.controllers.EditController' start='108' end='108' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='102'><Message>At EditController.java:[line 108]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.PageName' start='22' end='22' sourcepath='org/simple/blog/tools/strings/PageName.java' sourcefile='PageName.java' startBytecode='1'><Message>At PageName.java:[line 22]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='1' instanceHash='1a69b4ba54cdc8fd77503ec2a3ef146f' rank='12' abbrev='SECSF' category='SECURITY' priority='2' type='SPRING_FILE_DISCLOSURE' instanceOccurrenceMax='1'><ShortMessage>Spring File Disclosure</ShortMessage><LongMessage>ModelAndView populated with user controlled parameters</LongMessage><Class classname='org.simple.blog.controllers.EditController' primary='true'><SourceLine classname='org.simple.blog.controllers.EditController' start='38' end='191' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java'><Message>At EditController.java:[lines 38-191]</Message></SourceLine><Message>In class org.simple.blog.controllers.EditController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.EditController' signature='(Ljava/lang/String;)Lorg/springframework/web/servlet/ModelAndView;' name='editUserResetToken' primary='true'><SourceLine endBytecode='320' classname='org.simple.blog.controllers.EditController' start='96' end='113' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.EditController.editUserResetToken(String)</Message></Method><SourceLine endBytecode='126' classname='org.simple.blog.controllers.EditController' start='111' end='111' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='126' primary='true'><Message>At EditController.java:[line 111]</Message></SourceLine><String role='Sink method' value='org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V'><Message>Sink method org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.pageName'><Message>Unknown source org/simple/blog/tools/strings/PageName.pageName</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;</Message></String><SourceLine endBytecode='123' classname='org.simple.blog.controllers.EditController' start='111' end='111' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='123'><Message>At EditController.java:[line 111]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.PageName' start='22' end='22' sourcepath='org/simple/blog/tools/strings/PageName.java' sourcefile='PageName.java' startBytecode='1'><Message>At PageName.java:[line 22]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='43e6a2bd204ef3d0f2880264ffb7a5ed' rank='12' abbrev='SECSF' category='SECURITY' priority='2' type='SPRING_FILE_DISCLOSURE' instanceOccurrenceMax='3'><ShortMessage>Spring File Disclosure</ShortMessage><LongMessage>ModelAndView populated with user controlled parameters</LongMessage><Class classname='org.simple.blog.controllers.EditController' primary='true'><SourceLine classname='org.simple.blog.controllers.EditController' start='38' end='191' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java'><Message>At EditController.java:[lines 38-191]</Message></SourceLine><Message>In class org.simple.blog.controllers.EditController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.EditController' signature='(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/web/servlet/ModelAndView;' name='resetUserPassword' primary='true'><SourceLine endBytecode='433' classname='org.simple.blog.controllers.EditController' start='122' end='146' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.EditController.resetUserPassword(String, String, String)</Message></Method><SourceLine endBytecode='62' classname='org.simple.blog.controllers.EditController' start='128' end='128' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='62' primary='true'><Message>At EditController.java:[line 128]</Message></SourceLine><String role='Sink method' value='org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V'><Message>Sink method org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.pageName'><Message>Unknown source org/simple/blog/tools/strings/PageName.pageName</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;</Message></String><SourceLine endBytecode='59' classname='org.simple.blog.controllers.EditController' start='128' end='128' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='59'><Message>At EditController.java:[line 128]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.PageName' start='22' end='22' sourcepath='org/simple/blog/tools/strings/PageName.java' sourcefile='PageName.java' startBytecode='1'><Message>At PageName.java:[line 22]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='1' instanceHash='43e6a2bd204ef3d0f2880264ffb7a5ed' rank='12' abbrev='SECSF' category='SECURITY' priority='2' type='SPRING_FILE_DISCLOSURE' instanceOccurrenceMax='3'><ShortMessage>Spring File Disclosure</ShortMessage><LongMessage>ModelAndView populated with user controlled parameters</LongMessage><Class classname='org.simple.blog.controllers.EditController' primary='true'><SourceLine classname='org.simple.blog.controllers.EditController' start='38' end='191' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java'><Message>At EditController.java:[lines 38-191]</Message></SourceLine><Message>In class org.simple.blog.controllers.EditController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.EditController' signature='(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/web/servlet/ModelAndView;' name='resetUserPassword' primary='true'><SourceLine endBytecode='433' classname='org.simple.blog.controllers.EditController' start='122' end='146' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.EditController.resetUserPassword(String, String, String)</Message></Method><SourceLine endBytecode='132' classname='org.simple.blog.controllers.EditController' start='135' end='135' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='132' primary='true'><Message>At EditController.java:[line 135]</Message></SourceLine><String role='Sink method' value='org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V'><Message>Sink method org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.pageName'><Message>Unknown source org/simple/blog/tools/strings/PageName.pageName</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;</Message></String><SourceLine endBytecode='129' classname='org.simple.blog.controllers.EditController' start='135' end='135' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='129'><Message>At EditController.java:[line 135]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.PageName' start='22' end='22' sourcepath='org/simple/blog/tools/strings/PageName.java' sourcefile='PageName.java' startBytecode='1'><Message>At PageName.java:[line 22]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='2' instanceHash='43e6a2bd204ef3d0f2880264ffb7a5ed' rank='12' abbrev='SECSF' category='SECURITY' priority='2' type='SPRING_FILE_DISCLOSURE' instanceOccurrenceMax='3'><ShortMessage>Spring File Disclosure</ShortMessage><LongMessage>ModelAndView populated with user controlled parameters</LongMessage><Class classname='org.simple.blog.controllers.EditController' primary='true'><SourceLine classname='org.simple.blog.controllers.EditController' start='38' end='191' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java'><Message>At EditController.java:[lines 38-191]</Message></SourceLine><Message>In class org.simple.blog.controllers.EditController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.EditController' signature='(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/web/servlet/ModelAndView;' name='resetUserPassword' primary='true'><SourceLine endBytecode='433' classname='org.simple.blog.controllers.EditController' start='122' end='146' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.EditController.resetUserPassword(String, String, String)</Message></Method><SourceLine endBytecode='170' classname='org.simple.blog.controllers.EditController' start='139' end='139' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='170' primary='true'><Message>At EditController.java:[line 139]</Message></SourceLine><String role='Sink method' value='org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V'><Message>Sink method org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.pageName'><Message>Unknown source org/simple/blog/tools/strings/PageName.pageName</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;</Message></String><SourceLine endBytecode='167' classname='org.simple.blog.controllers.EditController' start='139' end='139' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='167'><Message>At EditController.java:[line 139]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.PageName' start='22' end='22' sourcepath='org/simple/blog/tools/strings/PageName.java' sourcefile='PageName.java' startBytecode='1'><Message>At PageName.java:[line 22]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='3' instanceHash='43e6a2bd204ef3d0f2880264ffb7a5ed' rank='12' abbrev='SECSF' category='SECURITY' priority='2' type='SPRING_FILE_DISCLOSURE' instanceOccurrenceMax='3'><ShortMessage>Spring File Disclosure</ShortMessage><LongMessage>ModelAndView populated with user controlled parameters</LongMessage><Class classname='org.simple.blog.controllers.EditController' primary='true'><SourceLine classname='org.simple.blog.controllers.EditController' start='38' end='191' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java'><Message>At EditController.java:[lines 38-191]</Message></SourceLine><Message>In class org.simple.blog.controllers.EditController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.EditController' signature='(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/web/servlet/ModelAndView;' name='resetUserPassword' primary='true'><SourceLine endBytecode='433' classname='org.simple.blog.controllers.EditController' start='122' end='146' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.EditController.resetUserPassword(String, String, String)</Message></Method><SourceLine endBytecode='194' classname='org.simple.blog.controllers.EditController' start='142' end='142' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='194' primary='true'><Message>At EditController.java:[line 142]</Message></SourceLine><String role='Sink method' value='org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V'><Message>Sink method org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.pageName'><Message>Unknown source org/simple/blog/tools/strings/PageName.pageName</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;</Message></String><SourceLine endBytecode='191' classname='org.simple.blog.controllers.EditController' start='142' end='142' sourcepath='org/simple/blog/controllers/EditController.java' sourcefile='EditController.java' startBytecode='191'><Message>At EditController.java:[line 142]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.PageName' start='22' end='22' sourcepath='org/simple/blog/tools/strings/PageName.java' sourcefile='PageName.java' startBytecode='1'><Message>At PageName.java:[line 22]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='113c58cf56202f256931a4ed33061900' cweid='352' rank='10' abbrev='SECSPRCSRFURM' category='SECURITY' priority='1' type='SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING' instanceOccurrenceMax='0'><ShortMessage>Spring CSRF unrestricted RequestMapping</ShortMessage><LongMessage>Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks</LongMessage><Class classname='org.simple.blog.controllers.LoginController' primary='true'><SourceLine classname='org.simple.blog.controllers.LoginController' start='26' end='108' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java'><Message>At LoginController.java:[lines 26-108]</Message></SourceLine><Message>In class org.simple.blog.controllers.LoginController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.LoginController' signature='(Ljava/lang/String;Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/ModelAndView;' name='checkBlogUser' primary='true'><SourceLine endBytecode='379' classname='org.simple.blog.controllers.LoginController' start='55' end='74' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.LoginController.checkBlogUser(String, String, HttpServletRequest)</Message></Method><SourceLine synthetic='true' endBytecode='379' classname='org.simple.blog.controllers.LoginController' start='55' end='74' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java' startBytecode='0'><Message>At LoginController.java:[lines 55-74]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='c7d3b2b29763903e6b5c4d1d44742dc4' cweid='352' rank='10' abbrev='SECSPRCSRFURM' category='SECURITY' priority='1' type='SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING' instanceOccurrenceMax='0'><ShortMessage>Spring CSRF unrestricted RequestMapping</ShortMessage><LongMessage>Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks</LongMessage><Class classname='org.simple.blog.controllers.LoginController' primary='true'><SourceLine classname='org.simple.blog.controllers.LoginController' start='26' end='108' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java'><Message>At LoginController.java:[lines 26-108]</Message></SourceLine><Message>In class org.simple.blog.controllers.LoginController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.LoginController' signature='(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/ModelAndView;' name='logout' primary='true'><SourceLine endBytecode='93' classname='org.simple.blog.controllers.LoginController' start='44' end='46' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.LoginController.logout(HttpServletRequest)</Message></Method><SourceLine synthetic='true' endBytecode='93' classname='org.simple.blog.controllers.LoginController' start='44' end='46' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java' startBytecode='0'><Message>At LoginController.java:[lines 44-46]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='4fddc69f2edfa755212fb223611222ae' cweid='352' rank='10' abbrev='SECSPRCSRFURM' category='SECURITY' priority='1' type='SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING' instanceOccurrenceMax='0'><ShortMessage>Spring CSRF unrestricted RequestMapping</ShortMessage><LongMessage>Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks</LongMessage><Class classname='org.simple.blog.controllers.LoginController' primary='true'><SourceLine classname='org.simple.blog.controllers.LoginController' start='26' end='108' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java'><Message>At LoginController.java:[lines 26-108]</Message></SourceLine><Message>In class org.simple.blog.controllers.LoginController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.LoginController' signature='(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/web/servlet/ModelAndView;' name='registrationBlogUser' primary='true'><SourceLine endBytecode='370' classname='org.simple.blog.controllers.LoginController' start='86' end='108' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.LoginController.registrationBlogUser(String, String, String, String, String, String)</Message></Method><SourceLine synthetic='true' endBytecode='370' classname='org.simple.blog.controllers.LoginController' start='86' end='108' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java' startBytecode='0'><Message>At LoginController.java:[lines 86-108]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='9386461e04385a29511ba086d4ba3b7e' cweid='352' rank='10' abbrev='SECSPRCSRFURM' category='SECURITY' priority='1' type='SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING' instanceOccurrenceMax='0'><ShortMessage>Spring CSRF unrestricted RequestMapping</ShortMessage><LongMessage>Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks</LongMessage><Class classname='org.simple.blog.controllers.LoginController' primary='true'><SourceLine classname='org.simple.blog.controllers.LoginController' start='26' end='108' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java'><Message>At LoginController.java:[lines 26-108]</Message></SourceLine><Message>In class org.simple.blog.controllers.LoginController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.LoginController' signature='()Lorg/springframework/web/servlet/ModelAndView;' name='start' primary='true'><SourceLine endBytecode='79' classname='org.simple.blog.controllers.LoginController' start='36' end='38' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.LoginController.start()</Message></Method><SourceLine synthetic='true' endBytecode='79' classname='org.simple.blog.controllers.LoginController' start='36' end='38' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java' startBytecode='0'><Message>At LoginController.java:[lines 36-38]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='fa1e245311a7b74ff30c4ce2f9fbb6f8' rank='12' abbrev='SECSF' category='SECURITY' priority='2' type='SPRING_FILE_DISCLOSURE' instanceOccurrenceMax='2'><ShortMessage>Spring File Disclosure</ShortMessage><LongMessage>ModelAndView populated with user controlled parameters</LongMessage><Class classname='org.simple.blog.controllers.LoginController' primary='true'><SourceLine classname='org.simple.blog.controllers.LoginController' start='26' end='108' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java'><Message>At LoginController.java:[lines 26-108]</Message></SourceLine><Message>In class org.simple.blog.controllers.LoginController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.LoginController' signature='(Ljava/lang/String;Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/ModelAndView;' name='checkBlogUser' primary='true'><SourceLine endBytecode='379' classname='org.simple.blog.controllers.LoginController' start='55' end='74' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.LoginController.checkBlogUser(String, String, HttpServletRequest)</Message></Method><SourceLine endBytecode='74' classname='org.simple.blog.controllers.LoginController' start='63' end='63' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java' startBytecode='74' primary='true'><Message>At LoginController.java:[line 63]</Message></SourceLine><String role='Sink method' value='org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V'><Message>Sink method org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.pageName'><Message>Unknown source org/simple/blog/tools/strings/PageName.pageName</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;</Message></String><SourceLine endBytecode='71' classname='org.simple.blog.controllers.LoginController' start='63' end='63' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java' startBytecode='71'><Message>At LoginController.java:[line 63]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.PageName' start='22' end='22' sourcepath='org/simple/blog/tools/strings/PageName.java' sourcefile='PageName.java' startBytecode='1'><Message>At PageName.java:[line 22]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='1' instanceHash='fa1e245311a7b74ff30c4ce2f9fbb6f8' rank='12' abbrev='SECSF' category='SECURITY' priority='2' type='SPRING_FILE_DISCLOSURE' instanceOccurrenceMax='2'><ShortMessage>Spring File Disclosure</ShortMessage><LongMessage>ModelAndView populated with user controlled parameters</LongMessage><Class classname='org.simple.blog.controllers.LoginController' primary='true'><SourceLine classname='org.simple.blog.controllers.LoginController' start='26' end='108' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java'><Message>At LoginController.java:[lines 26-108]</Message></SourceLine><Message>In class org.simple.blog.controllers.LoginController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.LoginController' signature='(Ljava/lang/String;Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/ModelAndView;' name='checkBlogUser' primary='true'><SourceLine endBytecode='379' classname='org.simple.blog.controllers.LoginController' start='55' end='74' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.LoginController.checkBlogUser(String, String, HttpServletRequest)</Message></Method><SourceLine endBytecode='112' classname='org.simple.blog.controllers.LoginController' start='68' end='68' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java' startBytecode='112' primary='true'><Message>At LoginController.java:[line 68]</Message></SourceLine><String role='Sink method' value='org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V'><Message>Sink method org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.pageName'><Message>Unknown source org/simple/blog/tools/strings/PageName.pageName</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;</Message></String><SourceLine endBytecode='109' classname='org.simple.blog.controllers.LoginController' start='68' end='68' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java' startBytecode='109'><Message>At LoginController.java:[line 68]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.PageName' start='22' end='22' sourcepath='org/simple/blog/tools/strings/PageName.java' sourcefile='PageName.java' startBytecode='1'><Message>At PageName.java:[line 22]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='2' instanceHash='fa1e245311a7b74ff30c4ce2f9fbb6f8' rank='12' abbrev='SECSF' category='SECURITY' priority='2' type='SPRING_FILE_DISCLOSURE' instanceOccurrenceMax='2'><ShortMessage>Spring File Disclosure</ShortMessage><LongMessage>ModelAndView populated with user controlled parameters</LongMessage><Class classname='org.simple.blog.controllers.LoginController' primary='true'><SourceLine classname='org.simple.blog.controllers.LoginController' start='26' end='108' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java'><Message>At LoginController.java:[lines 26-108]</Message></SourceLine><Message>In class org.simple.blog.controllers.LoginController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.LoginController' signature='(Ljava/lang/String;Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/ModelAndView;' name='checkBlogUser' primary='true'><SourceLine endBytecode='379' classname='org.simple.blog.controllers.LoginController' start='55' end='74' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.LoginController.checkBlogUser(String, String, HttpServletRequest)</Message></Method><SourceLine endBytecode='150' classname='org.simple.blog.controllers.LoginController' start='72' end='72' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java' startBytecode='150' primary='true'><Message>At LoginController.java:[line 72]</Message></SourceLine><String role='Sink method' value='org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V'><Message>Sink method org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.pageName'><Message>Unknown source org/simple/blog/tools/strings/PageName.pageName</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;</Message></String><SourceLine endBytecode='147' classname='org.simple.blog.controllers.LoginController' start='72' end='72' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java' startBytecode='147'><Message>At LoginController.java:[line 72]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.PageName' start='22' end='22' sourcepath='org/simple/blog/tools/strings/PageName.java' sourcefile='PageName.java' startBytecode='1'><Message>At PageName.java:[line 22]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='ceac0ae5e818c005020e644c4be04894' rank='12' abbrev='SECSF' category='SECURITY' priority='2' type='SPRING_FILE_DISCLOSURE' instanceOccurrenceMax='3'><ShortMessage>Spring File Disclosure</ShortMessage><LongMessage>ModelAndView populated with user controlled parameters</LongMessage><Class classname='org.simple.blog.controllers.LoginController' primary='true'><SourceLine classname='org.simple.blog.controllers.LoginController' start='26' end='108' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java'><Message>At LoginController.java:[lines 26-108]</Message></SourceLine><Message>In class org.simple.blog.controllers.LoginController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.LoginController' signature='(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/web/servlet/ModelAndView;' name='registrationBlogUser' primary='true'><SourceLine endBytecode='370' classname='org.simple.blog.controllers.LoginController' start='86' end='108' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.LoginController.registrationBlogUser(String, String, String, String, String, String)</Message></Method><SourceLine endBytecode='44' classname='org.simple.blog.controllers.LoginController' start='90' end='90' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java' startBytecode='44' primary='true'><Message>At LoginController.java:[line 90]</Message></SourceLine><String role='Sink method' value='org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V'><Message>Sink method org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.pageName'><Message>Unknown source org/simple/blog/tools/strings/PageName.pageName</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;</Message></String><SourceLine endBytecode='41' classname='org.simple.blog.controllers.LoginController' start='90' end='90' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java' startBytecode='41'><Message>At LoginController.java:[line 90]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.PageName' start='22' end='22' sourcepath='org/simple/blog/tools/strings/PageName.java' sourcefile='PageName.java' startBytecode='1'><Message>At PageName.java:[line 22]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='1' instanceHash='ceac0ae5e818c005020e644c4be04894' rank='12' abbrev='SECSF' category='SECURITY' priority='2' type='SPRING_FILE_DISCLOSURE' instanceOccurrenceMax='3'><ShortMessage>Spring File Disclosure</ShortMessage><LongMessage>ModelAndView populated with user controlled parameters</LongMessage><Class classname='org.simple.blog.controllers.LoginController' primary='true'><SourceLine classname='org.simple.blog.controllers.LoginController' start='26' end='108' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java'><Message>At LoginController.java:[lines 26-108]</Message></SourceLine><Message>In class org.simple.blog.controllers.LoginController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.LoginController' signature='(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/web/servlet/ModelAndView;' name='registrationBlogUser' primary='true'><SourceLine endBytecode='370' classname='org.simple.blog.controllers.LoginController' start='86' end='108' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.LoginController.registrationBlogUser(String, String, String, String, String, String)</Message></Method><SourceLine endBytecode='82' classname='org.simple.blog.controllers.LoginController' start='93' end='93' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java' startBytecode='82' primary='true'><Message>At LoginController.java:[line 93]</Message></SourceLine><String role='Sink method' value='org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V'><Message>Sink method org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.pageName'><Message>Unknown source org/simple/blog/tools/strings/PageName.pageName</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;</Message></String><SourceLine endBytecode='79' classname='org.simple.blog.controllers.LoginController' start='93' end='93' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java' startBytecode='79'><Message>At LoginController.java:[line 93]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.PageName' start='22' end='22' sourcepath='org/simple/blog/tools/strings/PageName.java' sourcefile='PageName.java' startBytecode='1'><Message>At PageName.java:[line 22]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='2' instanceHash='ceac0ae5e818c005020e644c4be04894' rank='12' abbrev='SECSF' category='SECURITY' priority='2' type='SPRING_FILE_DISCLOSURE' instanceOccurrenceMax='3'><ShortMessage>Spring File Disclosure</ShortMessage><LongMessage>ModelAndView populated with user controlled parameters</LongMessage><Class classname='org.simple.blog.controllers.LoginController' primary='true'><SourceLine classname='org.simple.blog.controllers.LoginController' start='26' end='108' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java'><Message>At LoginController.java:[lines 26-108]</Message></SourceLine><Message>In class org.simple.blog.controllers.LoginController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.LoginController' signature='(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/web/servlet/ModelAndView;' name='registrationBlogUser' primary='true'><SourceLine endBytecode='370' classname='org.simple.blog.controllers.LoginController' start='86' end='108' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.LoginController.registrationBlogUser(String, String, String, String, String, String)</Message></Method><SourceLine endBytecode='120' classname='org.simple.blog.controllers.LoginController' start='101' end='101' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java' startBytecode='120' primary='true'><Message>At LoginController.java:[line 101]</Message></SourceLine><String role='Sink method' value='org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V'><Message>Sink method org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.pageName'><Message>Unknown source org/simple/blog/tools/strings/PageName.pageName</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;</Message></String><SourceLine endBytecode='117' classname='org.simple.blog.controllers.LoginController' start='101' end='101' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java' startBytecode='117'><Message>At LoginController.java:[line 101]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.PageName' start='22' end='22' sourcepath='org/simple/blog/tools/strings/PageName.java' sourcefile='PageName.java' startBytecode='1'><Message>At PageName.java:[line 22]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='3' instanceHash='ceac0ae5e818c005020e644c4be04894' rank='12' abbrev='SECSF' category='SECURITY' priority='2' type='SPRING_FILE_DISCLOSURE' instanceOccurrenceMax='3'><ShortMessage>Spring File Disclosure</ShortMessage><LongMessage>ModelAndView populated with user controlled parameters</LongMessage><Class classname='org.simple.blog.controllers.LoginController' primary='true'><SourceLine classname='org.simple.blog.controllers.LoginController' start='26' end='108' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java'><Message>At LoginController.java:[lines 26-108]</Message></SourceLine><Message>In class org.simple.blog.controllers.LoginController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.LoginController' signature='(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/web/servlet/ModelAndView;' name='registrationBlogUser' primary='true'><SourceLine endBytecode='370' classname='org.simple.blog.controllers.LoginController' start='86' end='108' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.LoginController.registrationBlogUser(String, String, String, String, String, String)</Message></Method><SourceLine endBytecode='158' classname='org.simple.blog.controllers.LoginController' start='106' end='106' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java' startBytecode='158' primary='true'><Message>At LoginController.java:[line 106]</Message></SourceLine><String role='Sink method' value='org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V'><Message>Sink method org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.pageName'><Message>Unknown source org/simple/blog/tools/strings/PageName.pageName</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;</Message></String><SourceLine endBytecode='155' classname='org.simple.blog.controllers.LoginController' start='106' end='106' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java' startBytecode='155'><Message>At LoginController.java:[line 106]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.PageName' start='22' end='22' sourcepath='org/simple/blog/tools/strings/PageName.java' sourcefile='PageName.java' startBytecode='1'><Message>At PageName.java:[line 22]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='624de11a87334fc350663a33f195819d' rank='12' abbrev='SECSF' category='SECURITY' priority='2' type='SPRING_FILE_DISCLOSURE' instanceOccurrenceMax='0'><ShortMessage>Spring File Disclosure</ShortMessage><LongMessage>ModelAndView populated with user controlled parameters</LongMessage><Class classname='org.simple.blog.controllers.LoginController' primary='true'><SourceLine classname='org.simple.blog.controllers.LoginController' start='26' end='108' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java'><Message>At LoginController.java:[lines 26-108]</Message></SourceLine><Message>In class org.simple.blog.controllers.LoginController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.LoginController' signature='()Lorg/springframework/web/servlet/ModelAndView;' name='start' primary='true'><SourceLine endBytecode='79' classname='org.simple.blog.controllers.LoginController' start='36' end='38' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.LoginController.start()</Message></Method><SourceLine endBytecode='15' classname='org.simple.blog.controllers.LoginController' start='37' end='37' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java' startBytecode='15' primary='true'><Message>At LoginController.java:[line 37]</Message></SourceLine><String role='Sink method' value='org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V'><Message>Sink method org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.pageName'><Message>Unknown source org/simple/blog/tools/strings/PageName.pageName</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;</Message></String><SourceLine endBytecode='12' classname='org.simple.blog.controllers.LoginController' start='37' end='37' sourcepath='org/simple/blog/controllers/LoginController.java' sourcefile='LoginController.java' startBytecode='12'><Message>At LoginController.java:[line 37]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.PageName' start='22' end='22' sourcepath='org/simple/blog/tools/strings/PageName.java' sourcefile='PageName.java' startBytecode='1'><Message>At PageName.java:[line 22]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='694b5b722b30932b99ce2e96e616f29a' cweid='352' rank='10' abbrev='SECSPRCSRFURM' category='SECURITY' priority='1' type='SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING' instanceOccurrenceMax='0'><ShortMessage>Spring CSRF unrestricted RequestMapping</ShortMessage><LongMessage>Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks</LongMessage><Class classname='org.simple.blog.controllers.RedirectController' primary='true'><SourceLine classname='org.simple.blog.controllers.RedirectController' start='26' end='87' sourcepath='org/simple/blog/controllers/RedirectController.java' sourcefile='RedirectController.java'><Message>At RedirectController.java:[lines 26-87]</Message></SourceLine><Message>In class org.simple.blog.controllers.RedirectController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.RedirectController' signature='(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/ModelAndView;' name='redirectAddPost' primary='true'><SourceLine endBytecode='120' classname='org.simple.blog.controllers.RedirectController' start='40' end='45' sourcepath='org/simple/blog/controllers/RedirectController.java' sourcefile='RedirectController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.RedirectController.redirectAddPost(HttpServletRequest)</Message></Method><SourceLine synthetic='true' endBytecode='120' classname='org.simple.blog.controllers.RedirectController' start='40' end='45' sourcepath='org/simple/blog/controllers/RedirectController.java' sourcefile='RedirectController.java' startBytecode='0'><Message>At RedirectController.java:[lines 40-45]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='35fddfc919bfc6b199435983f4d2d807' cweid='352' rank='10' abbrev='SECSPRCSRFURM' category='SECURITY' priority='1' type='SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING' instanceOccurrenceMax='0'><ShortMessage>Spring CSRF unrestricted RequestMapping</ShortMessage><LongMessage>Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks</LongMessage><Class classname='org.simple.blog.controllers.RedirectController' primary='true'><SourceLine classname='org.simple.blog.controllers.RedirectController' start='26' end='87' sourcepath='org/simple/blog/controllers/RedirectController.java' sourcefile='RedirectController.java'><Message>At RedirectController.java:[lines 26-87]</Message></SourceLine><Message>In class org.simple.blog.controllers.RedirectController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.RedirectController' signature='()Lorg/springframework/web/servlet/ModelAndView;' name='redirectForgotPassword' primary='true'><SourceLine endBytecode='79' classname='org.simple.blog.controllers.RedirectController' start='73' end='75' sourcepath='org/simple/blog/controllers/RedirectController.java' sourcefile='RedirectController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.RedirectController.redirectForgotPassword()</Message></Method><SourceLine synthetic='true' endBytecode='79' classname='org.simple.blog.controllers.RedirectController' start='73' end='75' sourcepath='org/simple/blog/controllers/RedirectController.java' sourcefile='RedirectController.java' startBytecode='0'><Message>At RedirectController.java:[lines 73-75]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='e5a550789cf232882ff070102f13ad40' cweid='352' rank='10' abbrev='SECSPRCSRFURM' category='SECURITY' priority='1' type='SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING' instanceOccurrenceMax='0'><ShortMessage>Spring CSRF unrestricted RequestMapping</ShortMessage><LongMessage>Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks</LongMessage><Class classname='org.simple.blog.controllers.RedirectController' primary='true'><SourceLine classname='org.simple.blog.controllers.RedirectController' start='26' end='87' sourcepath='org/simple/blog/controllers/RedirectController.java' sourcefile='RedirectController.java'><Message>At RedirectController.java:[lines 26-87]</Message></SourceLine><Message>In class org.simple.blog.controllers.RedirectController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.RedirectController' signature='()Lorg/springframework/web/servlet/ModelAndView;' name='redirectLogin' primary='true'><SourceLine endBytecode='55' classname='org.simple.blog.controllers.RedirectController' start='81' end='81' sourcepath='org/simple/blog/controllers/RedirectController.java' sourcefile='RedirectController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.RedirectController.redirectLogin()</Message></Method><SourceLine synthetic='true' endBytecode='55' classname='org.simple.blog.controllers.RedirectController' start='81' end='81' sourcepath='org/simple/blog/controllers/RedirectController.java' sourcefile='RedirectController.java' startBytecode='0'><Message>At RedirectController.java:[line 81]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='4a16ba254319a7f6033e00f342a3ec39' cweid='352' rank='10' abbrev='SECSPRCSRFURM' category='SECURITY' priority='1' type='SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING' instanceOccurrenceMax='0'><ShortMessage>Spring CSRF unrestricted RequestMapping</ShortMessage><LongMessage>Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks</LongMessage><Class classname='org.simple.blog.controllers.RedirectController' primary='true'><SourceLine classname='org.simple.blog.controllers.RedirectController' start='26' end='87' sourcepath='org/simple/blog/controllers/RedirectController.java' sourcefile='RedirectController.java'><Message>At RedirectController.java:[lines 26-87]</Message></SourceLine><Message>In class org.simple.blog.controllers.RedirectController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.RedirectController' signature='()Lorg/springframework/web/servlet/ModelAndView;' name='redirectRegistration' primary='true'><SourceLine endBytecode='55' classname='org.simple.blog.controllers.RedirectController' start='87' end='87' sourcepath='org/simple/blog/controllers/RedirectController.java' sourcefile='RedirectController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.RedirectController.redirectRegistration()</Message></Method><SourceLine synthetic='true' endBytecode='55' classname='org.simple.blog.controllers.RedirectController' start='87' end='87' sourcepath='org/simple/blog/controllers/RedirectController.java' sourcefile='RedirectController.java' startBytecode='0'><Message>At RedirectController.java:[line 87]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='2c10786825a2af27de8d99caa8a91758' cweid='352' rank='10' abbrev='SECSPRCSRFURM' category='SECURITY' priority='1' type='SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING' instanceOccurrenceMax='0'><ShortMessage>Spring CSRF unrestricted RequestMapping</ShortMessage><LongMessage>Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks</LongMessage><Class classname='org.simple.blog.controllers.RedirectController' primary='true'><SourceLine classname='org.simple.blog.controllers.RedirectController' start='26' end='87' sourcepath='org/simple/blog/controllers/RedirectController.java' sourcefile='RedirectController.java'><Message>At RedirectController.java:[lines 26-87]</Message></SourceLine><Message>In class org.simple.blog.controllers.RedirectController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.RedirectController' signature='(Ljava/lang/String;)Lorg/springframework/web/servlet/ModelAndView;' name='redirectResetPassword' primary='true'><SourceLine endBytecode='242' classname='org.simple.blog.controllers.RedirectController' start='51' end='67' sourcepath='org/simple/blog/controllers/RedirectController.java' sourcefile='RedirectController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.RedirectController.redirectResetPassword(String)</Message></Method><SourceLine synthetic='true' endBytecode='242' classname='org.simple.blog.controllers.RedirectController' start='51' end='67' sourcepath='org/simple/blog/controllers/RedirectController.java' sourcefile='RedirectController.java' startBytecode='0'><Message>At RedirectController.java:[lines 51-67]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='5de7440a691c203ec86e30cceee709bb' rank='12' abbrev='SECSF' category='SECURITY' priority='2' type='SPRING_FILE_DISCLOSURE' instanceOccurrenceMax='0'><ShortMessage>Spring File Disclosure</ShortMessage><LongMessage>ModelAndView populated with user controlled parameters</LongMessage><Class classname='org.simple.blog.controllers.RedirectController' primary='true'><SourceLine classname='org.simple.blog.controllers.RedirectController' start='26' end='87' sourcepath='org/simple/blog/controllers/RedirectController.java' sourcefile='RedirectController.java'><Message>At RedirectController.java:[lines 26-87]</Message></SourceLine><Message>In class org.simple.blog.controllers.RedirectController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.RedirectController' signature='(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/ModelAndView;' name='redirectAddPost' primary='true'><SourceLine endBytecode='120' classname='org.simple.blog.controllers.RedirectController' start='40' end='45' sourcepath='org/simple/blog/controllers/RedirectController.java' sourcefile='RedirectController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.RedirectController.redirectAddPost(HttpServletRequest)</Message></Method><SourceLine endBytecode='29' classname='org.simple.blog.controllers.RedirectController' start='44' end='44' sourcepath='org/simple/blog/controllers/RedirectController.java' sourcefile='RedirectController.java' startBytecode='29' primary='true'><Message>At RedirectController.java:[line 44]</Message></SourceLine><String role='Sink method' value='org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V'><Message>Sink method org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.pageName'><Message>Unknown source org/simple/blog/tools/strings/PageName.pageName</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;</Message></String><SourceLine endBytecode='26' classname='org.simple.blog.controllers.RedirectController' start='44' end='44' sourcepath='org/simple/blog/controllers/RedirectController.java' sourcefile='RedirectController.java' startBytecode='26'><Message>At RedirectController.java:[line 44]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.PageName' start='22' end='22' sourcepath='org/simple/blog/tools/strings/PageName.java' sourcefile='PageName.java' startBytecode='1'><Message>At PageName.java:[line 22]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='b68ad311f17bfeadf9661a127d77219e' rank='12' abbrev='SECSF' category='SECURITY' priority='2' type='SPRING_FILE_DISCLOSURE' instanceOccurrenceMax='0'><ShortMessage>Spring File Disclosure</ShortMessage><LongMessage>ModelAndView populated with user controlled parameters</LongMessage><Class classname='org.simple.blog.controllers.RedirectController' primary='true'><SourceLine classname='org.simple.blog.controllers.RedirectController' start='26' end='87' sourcepath='org/simple/blog/controllers/RedirectController.java' sourcefile='RedirectController.java'><Message>At RedirectController.java:[lines 26-87]</Message></SourceLine><Message>In class org.simple.blog.controllers.RedirectController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.RedirectController' signature='()Lorg/springframework/web/servlet/ModelAndView;' name='redirectForgotPassword' primary='true'><SourceLine endBytecode='79' classname='org.simple.blog.controllers.RedirectController' start='73' end='75' sourcepath='org/simple/blog/controllers/RedirectController.java' sourcefile='RedirectController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.RedirectController.redirectForgotPassword()</Message></Method><SourceLine endBytecode='15' classname='org.simple.blog.controllers.RedirectController' start='74' end='74' sourcepath='org/simple/blog/controllers/RedirectController.java' sourcefile='RedirectController.java' startBytecode='15' primary='true'><Message>At RedirectController.java:[line 74]</Message></SourceLine><String role='Sink method' value='org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V'><Message>Sink method org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.pageName'><Message>Unknown source org/simple/blog/tools/strings/PageName.pageName</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;</Message></String><SourceLine endBytecode='12' classname='org.simple.blog.controllers.RedirectController' start='74' end='74' sourcepath='org/simple/blog/controllers/RedirectController.java' sourcefile='RedirectController.java' startBytecode='12'><Message>At RedirectController.java:[line 74]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.PageName' start='22' end='22' sourcepath='org/simple/blog/tools/strings/PageName.java' sourcefile='PageName.java' startBytecode='1'><Message>At PageName.java:[line 22]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='1487d5cc56b4f72f2c0f4013fd3efc0c' rank='12' abbrev='SECSF' category='SECURITY' priority='2' type='SPRING_FILE_DISCLOSURE' instanceOccurrenceMax='0'><ShortMessage>Spring File Disclosure</ShortMessage><LongMessage>ModelAndView populated with user controlled parameters</LongMessage><Class classname='org.simple.blog.controllers.RedirectController' primary='true'><SourceLine classname='org.simple.blog.controllers.RedirectController' start='26' end='87' sourcepath='org/simple/blog/controllers/RedirectController.java' sourcefile='RedirectController.java'><Message>At RedirectController.java:[lines 26-87]</Message></SourceLine><Message>In class org.simple.blog.controllers.RedirectController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.RedirectController' signature='()Lorg/springframework/web/servlet/ModelAndView;' name='redirectLogin' primary='true'><SourceLine endBytecode='55' classname='org.simple.blog.controllers.RedirectController' start='81' end='81' sourcepath='org/simple/blog/controllers/RedirectController.java' sourcefile='RedirectController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.RedirectController.redirectLogin()</Message></Method><SourceLine endBytecode='10' classname='org.simple.blog.controllers.RedirectController' start='81' end='81' sourcepath='org/simple/blog/controllers/RedirectController.java' sourcefile='RedirectController.java' startBytecode='10' primary='true'><Message>At RedirectController.java:[line 81]</Message></SourceLine><String role='Sink method' value='org/springframework/web/servlet/ModelAndView.&lt;init&gt;(Ljava/lang/String;)V'><Message>Sink method org/springframework/web/servlet/ModelAndView.&lt;init&gt;(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.pageName'><Message>Unknown source org/simple/blog/tools/strings/PageName.pageName</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;</Message></String><SourceLine endBytecode='7' classname='org.simple.blog.controllers.RedirectController' start='81' end='81' sourcepath='org/simple/blog/controllers/RedirectController.java' sourcefile='RedirectController.java' startBytecode='7'><Message>At RedirectController.java:[line 81]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.PageName' start='22' end='22' sourcepath='org/simple/blog/tools/strings/PageName.java' sourcefile='PageName.java' startBytecode='1'><Message>At PageName.java:[line 22]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='30cd13ae4d7cd0014f18df2a04a7c0b8' rank='12' abbrev='SECSF' category='SECURITY' priority='2' type='SPRING_FILE_DISCLOSURE' instanceOccurrenceMax='0'><ShortMessage>Spring File Disclosure</ShortMessage><LongMessage>ModelAndView populated with user controlled parameters</LongMessage><Class classname='org.simple.blog.controllers.RedirectController' primary='true'><SourceLine classname='org.simple.blog.controllers.RedirectController' start='26' end='87' sourcepath='org/simple/blog/controllers/RedirectController.java' sourcefile='RedirectController.java'><Message>At RedirectController.java:[lines 26-87]</Message></SourceLine><Message>In class org.simple.blog.controllers.RedirectController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.RedirectController' signature='()Lorg/springframework/web/servlet/ModelAndView;' name='redirectRegistration' primary='true'><SourceLine endBytecode='55' classname='org.simple.blog.controllers.RedirectController' start='87' end='87' sourcepath='org/simple/blog/controllers/RedirectController.java' sourcefile='RedirectController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.RedirectController.redirectRegistration()</Message></Method><SourceLine endBytecode='10' classname='org.simple.blog.controllers.RedirectController' start='87' end='87' sourcepath='org/simple/blog/controllers/RedirectController.java' sourcefile='RedirectController.java' startBytecode='10' primary='true'><Message>At RedirectController.java:[line 87]</Message></SourceLine><String role='Sink method' value='org/springframework/web/servlet/ModelAndView.&lt;init&gt;(Ljava/lang/String;)V'><Message>Sink method org/springframework/web/servlet/ModelAndView.&lt;init&gt;(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.pageName'><Message>Unknown source org/simple/blog/tools/strings/PageName.pageName</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;</Message></String><SourceLine endBytecode='7' classname='org.simple.blog.controllers.RedirectController' start='87' end='87' sourcepath='org/simple/blog/controllers/RedirectController.java' sourcefile='RedirectController.java' startBytecode='7'><Message>At RedirectController.java:[line 87]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.PageName' start='22' end='22' sourcepath='org/simple/blog/tools/strings/PageName.java' sourcefile='PageName.java' startBytecode='1'><Message>At PageName.java:[line 22]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='15a776059f37f27faacceab8f028d51e' rank='12' abbrev='SECSF' category='SECURITY' priority='2' type='SPRING_FILE_DISCLOSURE' instanceOccurrenceMax='1'><ShortMessage>Spring File Disclosure</ShortMessage><LongMessage>ModelAndView populated with user controlled parameters</LongMessage><Class classname='org.simple.blog.controllers.RedirectController' primary='true'><SourceLine classname='org.simple.blog.controllers.RedirectController' start='26' end='87' sourcepath='org/simple/blog/controllers/RedirectController.java' sourcefile='RedirectController.java'><Message>At RedirectController.java:[lines 26-87]</Message></SourceLine><Message>In class org.simple.blog.controllers.RedirectController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.RedirectController' signature='(Ljava/lang/String;)Lorg/springframework/web/servlet/ModelAndView;' name='redirectResetPassword' primary='true'><SourceLine endBytecode='242' classname='org.simple.blog.controllers.RedirectController' start='51' end='67' sourcepath='org/simple/blog/controllers/RedirectController.java' sourcefile='RedirectController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.RedirectController.redirectResetPassword(String)</Message></Method><SourceLine endBytecode='47' classname='org.simple.blog.controllers.RedirectController' start='57' end='57' sourcepath='org/simple/blog/controllers/RedirectController.java' sourcefile='RedirectController.java' startBytecode='47' primary='true'><Message>At RedirectController.java:[line 57]</Message></SourceLine><String role='Sink method' value='org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V'><Message>Sink method org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.pageName'><Message>Unknown source org/simple/blog/tools/strings/PageName.pageName</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;</Message></String><SourceLine endBytecode='44' classname='org.simple.blog.controllers.RedirectController' start='57' end='57' sourcepath='org/simple/blog/controllers/RedirectController.java' sourcefile='RedirectController.java' startBytecode='44'><Message>At RedirectController.java:[line 57]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.PageName' start='22' end='22' sourcepath='org/simple/blog/tools/strings/PageName.java' sourcefile='PageName.java' startBytecode='1'><Message>At PageName.java:[line 22]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='1' instanceHash='15a776059f37f27faacceab8f028d51e' rank='12' abbrev='SECSF' category='SECURITY' priority='2' type='SPRING_FILE_DISCLOSURE' instanceOccurrenceMax='1'><ShortMessage>Spring File Disclosure</ShortMessage><LongMessage>ModelAndView populated with user controlled parameters</LongMessage><Class classname='org.simple.blog.controllers.RedirectController' primary='true'><SourceLine classname='org.simple.blog.controllers.RedirectController' start='26' end='87' sourcepath='org/simple/blog/controllers/RedirectController.java' sourcefile='RedirectController.java'><Message>At RedirectController.java:[lines 26-87]</Message></SourceLine><Message>In class org.simple.blog.controllers.RedirectController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.RedirectController' signature='(Ljava/lang/String;)Lorg/springframework/web/servlet/ModelAndView;' name='redirectResetPassword' primary='true'><SourceLine endBytecode='242' classname='org.simple.blog.controllers.RedirectController' start='51' end='67' sourcepath='org/simple/blog/controllers/RedirectController.java' sourcefile='RedirectController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.RedirectController.redirectResetPassword(String)</Message></Method><SourceLine endBytecode='94' classname='org.simple.blog.controllers.RedirectController' start='64' end='64' sourcepath='org/simple/blog/controllers/RedirectController.java' sourcefile='RedirectController.java' startBytecode='94' primary='true'><Message>At RedirectController.java:[line 64]</Message></SourceLine><String role='Sink method' value='org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V'><Message>Sink method org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.pageName'><Message>Unknown source org/simple/blog/tools/strings/PageName.pageName</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;</Message></String><SourceLine endBytecode='91' classname='org.simple.blog.controllers.RedirectController' start='64' end='64' sourcepath='org/simple/blog/controllers/RedirectController.java' sourcefile='RedirectController.java' startBytecode='91'><Message>At RedirectController.java:[line 64]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.PageName' start='22' end='22' sourcepath='org/simple/blog/tools/strings/PageName.java' sourcefile='PageName.java' startBytecode='1'><Message>At PageName.java:[line 22]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='29338772b7a80beae24afe69032463e8' cweid='352' rank='10' abbrev='SECSPRCSRFURM' category='SECURITY' priority='1' type='SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING' instanceOccurrenceMax='0'><ShortMessage>Spring CSRF unrestricted RequestMapping</ShortMessage><LongMessage>Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks</LongMessage><Class classname='org.simple.blog.controllers.ShowController' primary='true'><SourceLine classname='org.simple.blog.controllers.ShowController' start='34' end='138' sourcepath='org/simple/blog/controllers/ShowController.java' sourcefile='ShowController.java'><Message>At ShowController.java:[lines 34-138]</Message></SourceLine><Message>In class org.simple.blog.controllers.ShowController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.ShowController' signature='(Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/ModelAndView;' name='showByPostId' primary='true'><SourceLine endBytecode='379' classname='org.simple.blog.controllers.ShowController' start='49' end='70' sourcepath='org/simple/blog/controllers/ShowController.java' sourcefile='ShowController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.ShowController.showByPostId(String, HttpServletRequest)</Message></Method><SourceLine synthetic='true' endBytecode='379' classname='org.simple.blog.controllers.ShowController' start='49' end='70' sourcepath='org/simple/blog/controllers/ShowController.java' sourcefile='ShowController.java' startBytecode='0'><Message>At ShowController.java:[lines 49-70]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='e53433fb51006c0fafa6a21c88a68d45' cweid='352' rank='10' abbrev='SECSPRCSRFURM' category='SECURITY' priority='1' type='SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING' instanceOccurrenceMax='0'><ShortMessage>Spring CSRF unrestricted RequestMapping</ShortMessage><LongMessage>Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks</LongMessage><Class classname='org.simple.blog.controllers.ShowController' primary='true'><SourceLine classname='org.simple.blog.controllers.ShowController' start='34' end='138' sourcepath='org/simple/blog/controllers/ShowController.java' sourcefile='ShowController.java'><Message>At ShowController.java:[lines 34-138]</Message></SourceLine><Message>In class org.simple.blog.controllers.ShowController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.ShowController' signature='(Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/ModelAndView;' name='showByUserId' primary='true'><SourceLine endBytecode='423' classname='org.simple.blog.controllers.ShowController' start='78' end='105' sourcepath='org/simple/blog/controllers/ShowController.java' sourcefile='ShowController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.ShowController.showByUserId(String, HttpServletRequest)</Message></Method><SourceLine synthetic='true' endBytecode='423' classname='org.simple.blog.controllers.ShowController' start='78' end='105' sourcepath='org/simple/blog/controllers/ShowController.java' sourcefile='ShowController.java' startBytecode='0'><Message>At ShowController.java:[lines 78-105]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='654b8fab21df6919f4a3722c78d75261' cweid='352' rank='10' abbrev='SECSPRCSRFURM' category='SECURITY' priority='1' type='SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING' instanceOccurrenceMax='0'><ShortMessage>Spring CSRF unrestricted RequestMapping</ShortMessage><LongMessage>Unrestricted Spring's RequestMapping makes the method vulnerable to CSRF attacks</LongMessage><Class classname='org.simple.blog.controllers.ShowController' primary='true'><SourceLine classname='org.simple.blog.controllers.ShowController' start='34' end='138' sourcepath='org/simple/blog/controllers/ShowController.java' sourcefile='ShowController.java'><Message>At ShowController.java:[lines 34-138]</Message></SourceLine><Message>In class org.simple.blog.controllers.ShowController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.ShowController' signature='(Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/ModelAndView;' name='showPostsList' primary='true'><SourceLine endBytecode='452' classname='org.simple.blog.controllers.ShowController' start='113' end='138' sourcepath='org/simple/blog/controllers/ShowController.java' sourcefile='ShowController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.ShowController.showPostsList(String, HttpServletRequest)</Message></Method><SourceLine synthetic='true' endBytecode='452' classname='org.simple.blog.controllers.ShowController' start='113' end='138' sourcepath='org/simple/blog/controllers/ShowController.java' sourcefile='ShowController.java' startBytecode='0'><Message>At ShowController.java:[lines 113-138]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='4c3d9fe236b7e0832e9a31832a3fa809' rank='12' abbrev='SECSF' category='SECURITY' priority='2' type='SPRING_FILE_DISCLOSURE' instanceOccurrenceMax='1'><ShortMessage>Spring File Disclosure</ShortMessage><LongMessage>ModelAndView populated with user controlled parameters</LongMessage><Class classname='org.simple.blog.controllers.ShowController' primary='true'><SourceLine classname='org.simple.blog.controllers.ShowController' start='34' end='138' sourcepath='org/simple/blog/controllers/ShowController.java' sourcefile='ShowController.java'><Message>At ShowController.java:[lines 34-138]</Message></SourceLine><Message>In class org.simple.blog.controllers.ShowController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.ShowController' signature='(Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/ModelAndView;' name='showByPostId' primary='true'><SourceLine endBytecode='379' classname='org.simple.blog.controllers.ShowController' start='49' end='70' sourcepath='org/simple/blog/controllers/ShowController.java' sourcefile='ShowController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.ShowController.showByPostId(String, HttpServletRequest)</Message></Method><SourceLine endBytecode='105' classname='org.simple.blog.controllers.ShowController' start='64' end='64' sourcepath='org/simple/blog/controllers/ShowController.java' sourcefile='ShowController.java' startBytecode='105' primary='true'><Message>At ShowController.java:[line 64]</Message></SourceLine><String role='Sink method' value='org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V'><Message>Sink method org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.pageName'><Message>Unknown source org/simple/blog/tools/strings/PageName.pageName</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;</Message></String><SourceLine endBytecode='102' classname='org.simple.blog.controllers.ShowController' start='64' end='64' sourcepath='org/simple/blog/controllers/ShowController.java' sourcefile='ShowController.java' startBytecode='102'><Message>At ShowController.java:[line 64]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.PageName' start='22' end='22' sourcepath='org/simple/blog/tools/strings/PageName.java' sourcefile='PageName.java' startBytecode='1'><Message>At PageName.java:[line 22]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='1' instanceHash='4c3d9fe236b7e0832e9a31832a3fa809' rank='12' abbrev='SECSF' category='SECURITY' priority='2' type='SPRING_FILE_DISCLOSURE' instanceOccurrenceMax='1'><ShortMessage>Spring File Disclosure</ShortMessage><LongMessage>ModelAndView populated with user controlled parameters</LongMessage><Class classname='org.simple.blog.controllers.ShowController' primary='true'><SourceLine classname='org.simple.blog.controllers.ShowController' start='34' end='138' sourcepath='org/simple/blog/controllers/ShowController.java' sourcefile='ShowController.java'><Message>At ShowController.java:[lines 34-138]</Message></SourceLine><Message>In class org.simple.blog.controllers.ShowController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.ShowController' signature='(Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/ModelAndView;' name='showByPostId' primary='true'><SourceLine endBytecode='379' classname='org.simple.blog.controllers.ShowController' start='49' end='70' sourcepath='org/simple/blog/controllers/ShowController.java' sourcefile='ShowController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.ShowController.showByPostId(String, HttpServletRequest)</Message></Method><SourceLine endBytecode='128' classname='org.simple.blog.controllers.ShowController' start='67' end='67' sourcepath='org/simple/blog/controllers/ShowController.java' sourcefile='ShowController.java' startBytecode='128' primary='true'><Message>At ShowController.java:[line 67]</Message></SourceLine><String role='Sink method' value='org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V'><Message>Sink method org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.pageName'><Message>Unknown source org/simple/blog/tools/strings/PageName.pageName</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;</Message></String><SourceLine endBytecode='125' classname='org.simple.blog.controllers.ShowController' start='67' end='67' sourcepath='org/simple/blog/controllers/ShowController.java' sourcefile='ShowController.java' startBytecode='125'><Message>At ShowController.java:[line 67]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.PageName' start='22' end='22' sourcepath='org/simple/blog/tools/strings/PageName.java' sourcefile='PageName.java' startBytecode='1'><Message>At PageName.java:[line 22]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='732842b5268088c305fb341c64038040' rank='12' abbrev='SECSF' category='SECURITY' priority='2' type='SPRING_FILE_DISCLOSURE' instanceOccurrenceMax='1'><ShortMessage>Spring File Disclosure</ShortMessage><LongMessage>ModelAndView populated with user controlled parameters</LongMessage><Class classname='org.simple.blog.controllers.ShowController' primary='true'><SourceLine classname='org.simple.blog.controllers.ShowController' start='34' end='138' sourcepath='org/simple/blog/controllers/ShowController.java' sourcefile='ShowController.java'><Message>At ShowController.java:[lines 34-138]</Message></SourceLine><Message>In class org.simple.blog.controllers.ShowController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.ShowController' signature='(Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/ModelAndView;' name='showByUserId' primary='true'><SourceLine endBytecode='423' classname='org.simple.blog.controllers.ShowController' start='78' end='105' sourcepath='org/simple/blog/controllers/ShowController.java' sourcefile='ShowController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.ShowController.showByUserId(String, HttpServletRequest)</Message></Method><SourceLine endBytecode='128' classname='org.simple.blog.controllers.ShowController' start='98' end='98' sourcepath='org/simple/blog/controllers/ShowController.java' sourcefile='ShowController.java' startBytecode='128' primary='true'><Message>At ShowController.java:[line 98]</Message></SourceLine><String role='Sink method' value='org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V'><Message>Sink method org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.pageName'><Message>Unknown source org/simple/blog/tools/strings/PageName.pageName</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;</Message></String><SourceLine endBytecode='125' classname='org.simple.blog.controllers.ShowController' start='98' end='98' sourcepath='org/simple/blog/controllers/ShowController.java' sourcefile='ShowController.java' startBytecode='125'><Message>At ShowController.java:[line 98]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.PageName' start='22' end='22' sourcepath='org/simple/blog/tools/strings/PageName.java' sourcefile='PageName.java' startBytecode='1'><Message>At PageName.java:[line 22]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='1' instanceHash='732842b5268088c305fb341c64038040' rank='12' abbrev='SECSF' category='SECURITY' priority='2' type='SPRING_FILE_DISCLOSURE' instanceOccurrenceMax='1'><ShortMessage>Spring File Disclosure</ShortMessage><LongMessage>ModelAndView populated with user controlled parameters</LongMessage><Class classname='org.simple.blog.controllers.ShowController' primary='true'><SourceLine classname='org.simple.blog.controllers.ShowController' start='34' end='138' sourcepath='org/simple/blog/controllers/ShowController.java' sourcefile='ShowController.java'><Message>At ShowController.java:[lines 34-138]</Message></SourceLine><Message>In class org.simple.blog.controllers.ShowController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.ShowController' signature='(Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/ModelAndView;' name='showByUserId' primary='true'><SourceLine endBytecode='423' classname='org.simple.blog.controllers.ShowController' start='78' end='105' sourcepath='org/simple/blog/controllers/ShowController.java' sourcefile='ShowController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.ShowController.showByUserId(String, HttpServletRequest)</Message></Method><SourceLine endBytecode='151' classname='org.simple.blog.controllers.ShowController' start='101' end='101' sourcepath='org/simple/blog/controllers/ShowController.java' sourcefile='ShowController.java' startBytecode='151' primary='true'><Message>At ShowController.java:[line 101]</Message></SourceLine><String role='Sink method' value='org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V'><Message>Sink method org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.pageName'><Message>Unknown source org/simple/blog/tools/strings/PageName.pageName</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;</Message></String><SourceLine endBytecode='148' classname='org.simple.blog.controllers.ShowController' start='101' end='101' sourcepath='org/simple/blog/controllers/ShowController.java' sourcefile='ShowController.java' startBytecode='148'><Message>At ShowController.java:[line 101]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.PageName' start='22' end='22' sourcepath='org/simple/blog/tools/strings/PageName.java' sourcefile='PageName.java' startBytecode='1'><Message>At PageName.java:[line 22]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='17cbefd05a991e569517382d10e5ebc6' rank='12' abbrev='SECSF' category='SECURITY' priority='2' type='SPRING_FILE_DISCLOSURE' instanceOccurrenceMax='1'><ShortMessage>Spring File Disclosure</ShortMessage><LongMessage>ModelAndView populated with user controlled parameters</LongMessage><Class classname='org.simple.blog.controllers.ShowController' primary='true'><SourceLine classname='org.simple.blog.controllers.ShowController' start='34' end='138' sourcepath='org/simple/blog/controllers/ShowController.java' sourcefile='ShowController.java'><Message>At ShowController.java:[lines 34-138]</Message></SourceLine><Message>In class org.simple.blog.controllers.ShowController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.ShowController' signature='(Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/ModelAndView;' name='showPostsList' primary='true'><SourceLine endBytecode='452' classname='org.simple.blog.controllers.ShowController' start='113' end='138' sourcepath='org/simple/blog/controllers/ShowController.java' sourcefile='ShowController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.ShowController.showPostsList(String, HttpServletRequest)</Message></Method><SourceLine endBytecode='133' classname='org.simple.blog.controllers.ShowController' start='132' end='132' sourcepath='org/simple/blog/controllers/ShowController.java' sourcefile='ShowController.java' startBytecode='133' primary='true'><Message>At ShowController.java:[line 132]</Message></SourceLine><String role='Sink method' value='org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V'><Message>Sink method org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.pageName'><Message>Unknown source org/simple/blog/tools/strings/PageName.pageName</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;</Message></String><SourceLine endBytecode='130' classname='org.simple.blog.controllers.ShowController' start='132' end='132' sourcepath='org/simple/blog/controllers/ShowController.java' sourcefile='ShowController.java' startBytecode='130'><Message>At ShowController.java:[line 132]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.PageName' start='22' end='22' sourcepath='org/simple/blog/tools/strings/PageName.java' sourcefile='PageName.java' startBytecode='1'><Message>At PageName.java:[line 22]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='1' instanceHash='17cbefd05a991e569517382d10e5ebc6' rank='12' abbrev='SECSF' category='SECURITY' priority='2' type='SPRING_FILE_DISCLOSURE' instanceOccurrenceMax='1'><ShortMessage>Spring File Disclosure</ShortMessage><LongMessage>ModelAndView populated with user controlled parameters</LongMessage><Class classname='org.simple.blog.controllers.ShowController' primary='true'><SourceLine classname='org.simple.blog.controllers.ShowController' start='34' end='138' sourcepath='org/simple/blog/controllers/ShowController.java' sourcefile='ShowController.java'><Message>At ShowController.java:[lines 34-138]</Message></SourceLine><Message>In class org.simple.blog.controllers.ShowController</Message></Class><Method isStatic='false' classname='org.simple.blog.controllers.ShowController' signature='(Ljava/lang/String;Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/web/servlet/ModelAndView;' name='showPostsList' primary='true'><SourceLine endBytecode='452' classname='org.simple.blog.controllers.ShowController' start='113' end='138' sourcepath='org/simple/blog/controllers/ShowController.java' sourcefile='ShowController.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.controllers.ShowController.showPostsList(String, HttpServletRequest)</Message></Method><SourceLine endBytecode='156' classname='org.simple.blog.controllers.ShowController' start='135' end='135' sourcepath='org/simple/blog/controllers/ShowController.java' sourcefile='ShowController.java' startBytecode='156' primary='true'><Message>At ShowController.java:[line 135]</Message></SourceLine><String role='Sink method' value='org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V'><Message>Sink method org/springframework/web/servlet/ModelAndView.setViewName(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.pageName'><Message>Unknown source org/simple/blog/tools/strings/PageName.pageName</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/PageName.getPageName()Ljava/lang/String;</Message></String><SourceLine endBytecode='153' classname='org.simple.blog.controllers.ShowController' start='135' end='135' sourcepath='org/simple/blog/controllers/ShowController.java' sourcefile='ShowController.java' startBytecode='153'><Message>At ShowController.java:[line 135]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.PageName' start='22' end='22' sourcepath='org/simple/blog/tools/strings/PageName.java' sourcefile='PageName.java' startBytecode='1'><Message>At PageName.java:[line 22]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='473efff7657841fef938f5f4dfe344' cweid='90' rank='12' abbrev='SECLDAPI' category='SECURITY' priority='2' type='LDAP_INJECTION' instanceOccurrenceMax='0'><ShortMessage>Potential LDAP Injection</ShortMessage><LongMessage>This use of javax/naming/Context.lookup(Ljava/lang/String;)Ljava/lang/Object; can be vulnerable to LDAP injection</LongMessage><Class classname='org.simple.blog.dao.connection.Oracle' primary='true'><SourceLine classname='org.simple.blog.dao.connection.Oracle' start='14' end='55' sourcepath='org/simple/blog/dao/connection/Oracle.java' sourcefile='Oracle.java'><Message>At Oracle.java:[lines 14-55]</Message></SourceLine><Message>In class org.simple.blog.dao.connection.Oracle</Message></Class><Method isStatic='false' classname='org.simple.blog.dao.connection.Oracle' signature='()V' name='connect' primary='true'><SourceLine endBytecode='232' classname='org.simple.blog.dao.connection.Oracle' start='27' end='41' sourcepath='org/simple/blog/dao/connection/Oracle.java' sourcefile='Oracle.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.dao.connection.Oracle.connect()</Message></Method><SourceLine endBytecode='65' classname='org.simple.blog.dao.connection.Oracle' start='34' end='34' sourcepath='org/simple/blog/dao/connection/Oracle.java' sourcefile='Oracle.java' startBytecode='65' primary='true'><Message>At Oracle.java:[line 34]</Message></SourceLine><String role='Sink method' value='javax/naming/Context.lookup(Ljava/lang/String;)Ljava/lang/Object;'><Message>Sink method javax/naming/Context.lookup(Ljava/lang/String;)Ljava/lang/Object;</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/AppProperties.dbDataSourceName'><Message>Unknown source org/simple/blog/tools/AppProperties.dbDataSourceName</Message></String><String role='Unknown source' value='org/simple/blog/tools/AppProperties.getDbDataSourceName()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/AppProperties.getDbDataSourceName()Ljava/lang/String;</Message></String><SourceLine endBytecode='62' classname='org.simple.blog.dao.connection.Oracle' start='34' end='34' sourcepath='org/simple/blog/dao/connection/Oracle.java' sourcefile='Oracle.java' startBytecode='62'><Message>At Oracle.java:[line 34]</Message></SourceLine><SourceLine endBytecode='0' classname='org.simple.blog.tools.AppProperties' start='71' end='71' sourcepath='org/simple/blog/tools/AppProperties.java' sourcefile='AppProperties.java' startBytecode='0'><Message>At AppProperties.java:[line 71]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='992e2bdcbd0749e67e23bc63fa7d0275' cweid='89' rank='12' abbrev='SECSQLIJDBC' category='SECURITY' priority='2' type='SQL_INJECTION_JDBC' instanceOccurrenceMax='0'><ShortMessage>Potential JDBC Injection</ShortMessage><LongMessage>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</LongMessage><Class classname='org.simple.blog.dao.implementations.blog.DAOCommentImpl' primary='true'><SourceLine classname='org.simple.blog.dao.implementations.blog.DAOCommentImpl' start='20' end='183' sourcepath='org/simple/blog/dao/implementations/blog/DAOCommentImpl.java' sourcefile='DAOCommentImpl.java'><Message>At DAOCommentImpl.java:[lines 20-183]</Message></SourceLine><Message>In class org.simple.blog.dao.implementations.blog.DAOCommentImpl</Message></Class><Method isStatic='false' classname='org.simple.blog.dao.implementations.blog.DAOCommentImpl' signature='(Lorg/simple/blog/entities/blog/BlogComment;)V' name='addComment' primary='true'><SourceLine endBytecode='352' classname='org.simple.blog.dao.implementations.blog.DAOCommentImpl' start='49' end='67' sourcepath='org/simple/blog/dao/implementations/blog/DAOCommentImpl.java' sourcefile='DAOCommentImpl.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.dao.implementations.blog.DAOCommentImpl.addComment(BlogComment)</Message></Method><SourceLine endBytecode='15' classname='org.simple.blog.dao.implementations.blog.DAOCommentImpl' start='50' end='50' sourcepath='org/simple/blog/dao/implementations/blog/DAOCommentImpl.java' sourcefile='DAOCommentImpl.java' startBytecode='15' primary='true'><Message>At DAOCommentImpl.java:[line 50]</Message></SourceLine><String role='Sink method' value='java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;'><Message>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.query'><Message>Unknown source org/simple/blog/tools/strings/Query.query</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;</Message></String><SourceLine endBytecode='12' classname='org.simple.blog.dao.implementations.blog.DAOCommentImpl' start='50' end='50' sourcepath='org/simple/blog/dao/implementations/blog/DAOCommentImpl.java' sourcefile='DAOCommentImpl.java' startBytecode='12'><Message>At DAOCommentImpl.java:[line 50]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.Query' start='143' end='143' sourcepath='org/simple/blog/tools/strings/Query.java' sourcefile='Query.java' startBytecode='1'><Message>At Query.java:[line 143]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='4589fe29fa67ca0b55a642f64144baa1' cweid='89' rank='12' abbrev='SECSQLIJDBC' category='SECURITY' priority='2' type='SQL_INJECTION_JDBC' instanceOccurrenceMax='0'><ShortMessage>Potential JDBC Injection</ShortMessage><LongMessage>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</LongMessage><Class classname='org.simple.blog.dao.implementations.blog.DAOCommentImpl' primary='true'><SourceLine classname='org.simple.blog.dao.implementations.blog.DAOCommentImpl' start='20' end='183' sourcepath='org/simple/blog/dao/implementations/blog/DAOCommentImpl.java' sourcefile='DAOCommentImpl.java'><Message>At DAOCommentImpl.java:[lines 20-183]</Message></SourceLine><Message>In class org.simple.blog.dao.implementations.blog.DAOCommentImpl</Message></Class><Method isStatic='false' classname='org.simple.blog.dao.implementations.blog.DAOCommentImpl' signature='(Ljava/lang/String;)V' name='deleteCommentTree' primary='true'><SourceLine endBytecode='247' classname='org.simple.blog.dao.implementations.blog.DAOCommentImpl' start='126' end='136' sourcepath='org/simple/blog/dao/implementations/blog/DAOCommentImpl.java' sourcefile='DAOCommentImpl.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.dao.implementations.blog.DAOCommentImpl.deleteCommentTree(String)</Message></Method><SourceLine endBytecode='15' classname='org.simple.blog.dao.implementations.blog.DAOCommentImpl' start='127' end='127' sourcepath='org/simple/blog/dao/implementations/blog/DAOCommentImpl.java' sourcefile='DAOCommentImpl.java' startBytecode='15' primary='true'><Message>At DAOCommentImpl.java:[line 127]</Message></SourceLine><String role='Sink method' value='java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;'><Message>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.query'><Message>Unknown source org/simple/blog/tools/strings/Query.query</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;</Message></String><SourceLine endBytecode='12' classname='org.simple.blog.dao.implementations.blog.DAOCommentImpl' start='127' end='127' sourcepath='org/simple/blog/dao/implementations/blog/DAOCommentImpl.java' sourcefile='DAOCommentImpl.java' startBytecode='12'><Message>At DAOCommentImpl.java:[line 127]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.Query' start='143' end='143' sourcepath='org/simple/blog/tools/strings/Query.java' sourcefile='Query.java' startBytecode='1'><Message>At Query.java:[line 143]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='62f96232f00111339673a646fe1e0b11' cweid='89' rank='12' abbrev='SECSQLIJDBC' category='SECURITY' priority='2' type='SQL_INJECTION_JDBC' instanceOccurrenceMax='0'><ShortMessage>Potential JDBC Injection</ShortMessage><LongMessage>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</LongMessage><Class classname='org.simple.blog.dao.implementations.blog.DAOCommentImpl' primary='true'><SourceLine classname='org.simple.blog.dao.implementations.blog.DAOCommentImpl' start='20' end='183' sourcepath='org/simple/blog/dao/implementations/blog/DAOCommentImpl.java' sourcefile='DAOCommentImpl.java'><Message>At DAOCommentImpl.java:[lines 20-183]</Message></SourceLine><Message>In class org.simple.blog.dao.implementations.blog.DAOCommentImpl</Message></Class><Method isStatic='false' classname='org.simple.blog.dao.implementations.blog.DAOCommentImpl' signature='(Ljava/lang/String;)V' name='deleteCommentsByUserId' primary='true'><SourceLine endBytecode='227' classname='org.simple.blog.dao.implementations.blog.DAOCommentImpl' start='174' end='183' sourcepath='org/simple/blog/dao/implementations/blog/DAOCommentImpl.java' sourcefile='DAOCommentImpl.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.dao.implementations.blog.DAOCommentImpl.deleteCommentsByUserId(String)</Message></Method><SourceLine endBytecode='15' classname='org.simple.blog.dao.implementations.blog.DAOCommentImpl' start='175' end='175' sourcepath='org/simple/blog/dao/implementations/blog/DAOCommentImpl.java' sourcefile='DAOCommentImpl.java' startBytecode='15' primary='true'><Message>At DAOCommentImpl.java:[line 175]</Message></SourceLine><String role='Sink method' value='java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;'><Message>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.query'><Message>Unknown source org/simple/blog/tools/strings/Query.query</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;</Message></String><SourceLine endBytecode='12' classname='org.simple.blog.dao.implementations.blog.DAOCommentImpl' start='175' end='175' sourcepath='org/simple/blog/dao/implementations/blog/DAOCommentImpl.java' sourcefile='DAOCommentImpl.java' startBytecode='12'><Message>At DAOCommentImpl.java:[line 175]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.Query' start='143' end='143' sourcepath='org/simple/blog/tools/strings/Query.java' sourcefile='Query.java' startBytecode='1'><Message>At Query.java:[line 143]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='664c3b9b7ace03c7e6af55e0412bd499' cweid='89' rank='12' abbrev='SECSQLIJDBC' category='SECURITY' priority='2' type='SQL_INJECTION_JDBC' instanceOccurrenceMax='0'><ShortMessage>Potential JDBC Injection</ShortMessage><LongMessage>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</LongMessage><Class classname='org.simple.blog.dao.implementations.blog.DAOCommentImpl' primary='true'><SourceLine classname='org.simple.blog.dao.implementations.blog.DAOCommentImpl' start='20' end='183' sourcepath='org/simple/blog/dao/implementations/blog/DAOCommentImpl.java' sourcefile='DAOCommentImpl.java'><Message>At DAOCommentImpl.java:[lines 20-183]</Message></SourceLine><Message>In class org.simple.blog.dao.implementations.blog.DAOCommentImpl</Message></Class><Method isStatic='false' classname='org.simple.blog.dao.implementations.blog.DAOCommentImpl' signature='(Ljava/lang/String;)Lorg/simple/blog/entities/blog/BlogComment;' name='getCommentById' primary='true'><SourceLine endBytecode='300' classname='org.simple.blog.dao.implementations.blog.DAOCommentImpl' start='27' end='43' sourcepath='org/simple/blog/dao/implementations/blog/DAOCommentImpl.java' sourcefile='DAOCommentImpl.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.dao.implementations.blog.DAOCommentImpl.getCommentById(String)</Message></Method><SourceLine endBytecode='15' classname='org.simple.blog.dao.implementations.blog.DAOCommentImpl' start='28' end='28' sourcepath='org/simple/blog/dao/implementations/blog/DAOCommentImpl.java' sourcefile='DAOCommentImpl.java' startBytecode='15' primary='true'><Message>At DAOCommentImpl.java:[line 28]</Message></SourceLine><String role='Sink method' value='java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;'><Message>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.query'><Message>Unknown source org/simple/blog/tools/strings/Query.query</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;</Message></String><SourceLine endBytecode='12' classname='org.simple.blog.dao.implementations.blog.DAOCommentImpl' start='29' end='29' sourcepath='org/simple/blog/dao/implementations/blog/DAOCommentImpl.java' sourcefile='DAOCommentImpl.java' startBytecode='12'><Message>At DAOCommentImpl.java:[line 29]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.Query' start='143' end='143' sourcepath='org/simple/blog/tools/strings/Query.java' sourcefile='Query.java' startBytecode='1'><Message>At Query.java:[line 143]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='f97006aee0687c0f88e6677b08a538e3' cweid='89' rank='12' abbrev='SECSQLIJDBC' category='SECURITY' priority='2' type='SQL_INJECTION_JDBC' instanceOccurrenceMax='0'><ShortMessage>Potential JDBC Injection</ShortMessage><LongMessage>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</LongMessage><Class classname='org.simple.blog.dao.implementations.blog.DAOCommentImpl' primary='true'><SourceLine classname='org.simple.blog.dao.implementations.blog.DAOCommentImpl' start='20' end='183' sourcepath='org/simple/blog/dao/implementations/blog/DAOCommentImpl.java' sourcefile='DAOCommentImpl.java'><Message>At DAOCommentImpl.java:[lines 20-183]</Message></SourceLine><Message>In class org.simple.blog.dao.implementations.blog.DAOCommentImpl</Message></Class><Method isStatic='false' classname='org.simple.blog.dao.implementations.blog.DAOCommentImpl' signature='(Ljava/lang/String;)Ljava/util/List;' name='getCommentsByPostId' primary='true'><SourceLine endBytecode='327' classname='org.simple.blog.dao.implementations.blog.DAOCommentImpl' start='106' end='120' sourcepath='org/simple/blog/dao/implementations/blog/DAOCommentImpl.java' sourcefile='DAOCommentImpl.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.dao.implementations.blog.DAOCommentImpl.getCommentsByPostId(String)</Message></Method><SourceLine endBytecode='23' classname='org.simple.blog.dao.implementations.blog.DAOCommentImpl' start='108' end='108' sourcepath='org/simple/blog/dao/implementations/blog/DAOCommentImpl.java' sourcefile='DAOCommentImpl.java' startBytecode='23' primary='true'><Message>At DAOCommentImpl.java:[line 108]</Message></SourceLine><String role='Sink method' value='java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;'><Message>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.query'><Message>Unknown source org/simple/blog/tools/strings/Query.query</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;</Message></String><SourceLine endBytecode='20' classname='org.simple.blog.dao.implementations.blog.DAOCommentImpl' start='108' end='108' sourcepath='org/simple/blog/dao/implementations/blog/DAOCommentImpl.java' sourcefile='DAOCommentImpl.java' startBytecode='20'><Message>At DAOCommentImpl.java:[line 108]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.Query' start='143' end='143' sourcepath='org/simple/blog/tools/strings/Query.java' sourcefile='Query.java' startBytecode='1'><Message>At Query.java:[line 143]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='b7477a15396fa7b7248ad94796dd26da' cweid='89' rank='12' abbrev='SECSQLIJDBC' category='SECURITY' priority='2' type='SQL_INJECTION_JDBC' instanceOccurrenceMax='0'><ShortMessage>Potential JDBC Injection</ShortMessage><LongMessage>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</LongMessage><Class classname='org.simple.blog.dao.implementations.blog.DAOCommentImpl' primary='true'><SourceLine classname='org.simple.blog.dao.implementations.blog.DAOCommentImpl' start='20' end='183' sourcepath='org/simple/blog/dao/implementations/blog/DAOCommentImpl.java' sourcefile='DAOCommentImpl.java'><Message>At DAOCommentImpl.java:[lines 20-183]</Message></SourceLine><Message>In class org.simple.blog.dao.implementations.blog.DAOCommentImpl</Message></Class><Method isStatic='false' classname='org.simple.blog.dao.implementations.blog.DAOCommentImpl' signature='(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V' name='updateComment' primary='true'><SourceLine endBytecode='284' classname='org.simple.blog.dao.implementations.blog.DAOCommentImpl' start='72' end='84' sourcepath='org/simple/blog/dao/implementations/blog/DAOCommentImpl.java' sourcefile='DAOCommentImpl.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.dao.implementations.blog.DAOCommentImpl.updateComment(String, String, String)</Message></Method><SourceLine endBytecode='15' classname='org.simple.blog.dao.implementations.blog.DAOCommentImpl' start='73' end='73' sourcepath='org/simple/blog/dao/implementations/blog/DAOCommentImpl.java' sourcefile='DAOCommentImpl.java' startBytecode='15' primary='true'><Message>At DAOCommentImpl.java:[line 73]</Message></SourceLine><String role='Sink method' value='java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;'><Message>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.query'><Message>Unknown source org/simple/blog/tools/strings/Query.query</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;</Message></String><SourceLine endBytecode='12' classname='org.simple.blog.dao.implementations.blog.DAOCommentImpl' start='73' end='73' sourcepath='org/simple/blog/dao/implementations/blog/DAOCommentImpl.java' sourcefile='DAOCommentImpl.java' startBytecode='12'><Message>At DAOCommentImpl.java:[line 73]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.Query' start='143' end='143' sourcepath='org/simple/blog/tools/strings/Query.java' sourcefile='Query.java' startBytecode='1'><Message>At Query.java:[line 143]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='c2f52563d249093d74ff0db38b13c18c' cweid='89' rank='12' abbrev='SECSQLIJDBC' category='SECURITY' priority='2' type='SQL_INJECTION_JDBC' instanceOccurrenceMax='0'><ShortMessage>Potential JDBC Injection</ShortMessage><LongMessage>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</LongMessage><Class classname='org.simple.blog.dao.implementations.blog.DAOCommentImpl' primary='true'><SourceLine classname='org.simple.blog.dao.implementations.blog.DAOCommentImpl' start='20' end='183' sourcepath='org/simple/blog/dao/implementations/blog/DAOCommentImpl.java' sourcefile='DAOCommentImpl.java'><Message>At DAOCommentImpl.java:[lines 20-183]</Message></SourceLine><Message>In class org.simple.blog.dao.implementations.blog.DAOCommentImpl</Message></Class><Method isStatic='false' classname='org.simple.blog.dao.implementations.blog.DAOCommentImpl' signature='(Lorg/simple/blog/entities/blog/BlogComment;)V' name='updateComment' primary='true'><SourceLine endBytecode='268' classname='org.simple.blog.dao.implementations.blog.DAOCommentImpl' start='89' end='101' sourcepath='org/simple/blog/dao/implementations/blog/DAOCommentImpl.java' sourcefile='DAOCommentImpl.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.dao.implementations.blog.DAOCommentImpl.updateComment(BlogComment)</Message></Method><SourceLine endBytecode='15' classname='org.simple.blog.dao.implementations.blog.DAOCommentImpl' start='90' end='90' sourcepath='org/simple/blog/dao/implementations/blog/DAOCommentImpl.java' sourcefile='DAOCommentImpl.java' startBytecode='15' primary='true'><Message>At DAOCommentImpl.java:[line 90]</Message></SourceLine><String role='Sink method' value='java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;'><Message>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.query'><Message>Unknown source org/simple/blog/tools/strings/Query.query</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;</Message></String><SourceLine endBytecode='12' classname='org.simple.blog.dao.implementations.blog.DAOCommentImpl' start='90' end='90' sourcepath='org/simple/blog/dao/implementations/blog/DAOCommentImpl.java' sourcefile='DAOCommentImpl.java' startBytecode='12'><Message>At DAOCommentImpl.java:[line 90]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.Query' start='143' end='143' sourcepath='org/simple/blog/tools/strings/Query.java' sourcefile='Query.java' startBytecode='1'><Message>At Query.java:[line 143]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='c15411344d5e69dd9774638bfa9ef297' cweid='89' rank='12' abbrev='SECSQLIJDBC' category='SECURITY' priority='2' type='SQL_INJECTION_JDBC' instanceOccurrenceMax='0'><ShortMessage>Potential JDBC Injection</ShortMessage><LongMessage>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</LongMessage><Class classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' primary='true'><SourceLine classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='22' end='272' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java'><Message>At DAOPostImpl.java:[lines 22-272]</Message></SourceLine><Message>In class org.simple.blog.dao.implementations.blog.DAOPostImpl</Message></Class><Method isStatic='false' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' signature='(Lorg/simple/blog/entities/blog/BlogPost;)V' name='addPost' primary='true'><SourceLine endBytecode='286' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='78' end='91' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.dao.implementations.blog.DAOPostImpl.addPost(BlogPost)</Message></Method><SourceLine endBytecode='15' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='79' end='79' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java' startBytecode='15' primary='true'><Message>At DAOPostImpl.java:[line 79]</Message></SourceLine><String role='Sink method' value='java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;'><Message>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.query'><Message>Unknown source org/simple/blog/tools/strings/Query.query</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;</Message></String><SourceLine endBytecode='12' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='79' end='79' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java' startBytecode='12'><Message>At DAOPostImpl.java:[line 79]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.Query' start='143' end='143' sourcepath='org/simple/blog/tools/strings/Query.java' sourcefile='Query.java' startBytecode='1'><Message>At Query.java:[line 143]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='ade0526ff733aff92539b780ab40d2c7' cweid='89' rank='12' abbrev='SECSQLIJDBC' category='SECURITY' priority='2' type='SQL_INJECTION_JDBC' instanceOccurrenceMax='0'><ShortMessage>Potential JDBC Injection</ShortMessage><LongMessage>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</LongMessage><Class classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' primary='true'><SourceLine classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='22' end='272' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java'><Message>At DAOPostImpl.java:[lines 22-272]</Message></SourceLine><Message>In class org.simple.blog.dao.implementations.blog.DAOPostImpl</Message></Class><Method isStatic='false' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' signature='(Ljava/lang/String;)V' name='deletePost' primary='true'><SourceLine endBytecode='227' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='178' end='187' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.dao.implementations.blog.DAOPostImpl.deletePost(String)</Message></Method><SourceLine endBytecode='15' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='179' end='179' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java' startBytecode='15' primary='true'><Message>At DAOPostImpl.java:[line 179]</Message></SourceLine><String role='Sink method' value='java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;'><Message>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.query'><Message>Unknown source org/simple/blog/tools/strings/Query.query</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;</Message></String><SourceLine endBytecode='12' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='179' end='179' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java' startBytecode='12'><Message>At DAOPostImpl.java:[line 179]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.Query' start='143' end='143' sourcepath='org/simple/blog/tools/strings/Query.java' sourcefile='Query.java' startBytecode='1'><Message>At Query.java:[line 143]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='3250273b020627e6a986ae72f4f87650' cweid='89' rank='12' abbrev='SECSQLIJDBC' category='SECURITY' priority='2' type='SQL_INJECTION_JDBC' instanceOccurrenceMax='0'><ShortMessage>Potential JDBC Injection</ShortMessage><LongMessage>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</LongMessage><Class classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' primary='true'><SourceLine classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='22' end='272' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java'><Message>At DAOPostImpl.java:[lines 22-272]</Message></SourceLine><Message>In class org.simple.blog.dao.implementations.blog.DAOPostImpl</Message></Class><Method isStatic='false' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' signature='(Ljava/lang/String;)V' name='deletePostComments' primary='true'><SourceLine endBytecode='227' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='192' end='201' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.dao.implementations.blog.DAOPostImpl.deletePostComments(String)</Message></Method><SourceLine endBytecode='15' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='193' end='193' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java' startBytecode='15' primary='true'><Message>At DAOPostImpl.java:[line 193]</Message></SourceLine><String role='Sink method' value='java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;'><Message>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.query'><Message>Unknown source org/simple/blog/tools/strings/Query.query</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;</Message></String><SourceLine endBytecode='12' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='193' end='193' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java' startBytecode='12'><Message>At DAOPostImpl.java:[line 193]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.Query' start='143' end='143' sourcepath='org/simple/blog/tools/strings/Query.java' sourcefile='Query.java' startBytecode='1'><Message>At Query.java:[line 143]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='7393373ed7818acc9668529a9da2f79d' cweid='89' rank='12' abbrev='SECSQLIJDBC' category='SECURITY' priority='2' type='SQL_INJECTION_JDBC' instanceOccurrenceMax='0'><ShortMessage>Potential JDBC Injection</ShortMessage><LongMessage>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</LongMessage><Class classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' primary='true'><SourceLine classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='22' end='272' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java'><Message>At DAOPostImpl.java:[lines 22-272]</Message></SourceLine><Message>In class org.simple.blog.dao.implementations.blog.DAOPostImpl</Message></Class><Method isStatic='false' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' signature='(Ljava/lang/String;)V' name='deletePostsByUserId' primary='true'><SourceLine endBytecode='227' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='263' end='272' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.dao.implementations.blog.DAOPostImpl.deletePostsByUserId(String)</Message></Method><SourceLine endBytecode='15' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='264' end='264' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java' startBytecode='15' primary='true'><Message>At DAOPostImpl.java:[line 264]</Message></SourceLine><String role='Sink method' value='java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;'><Message>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.query'><Message>Unknown source org/simple/blog/tools/strings/Query.query</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;</Message></String><SourceLine endBytecode='12' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='264' end='264' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java' startBytecode='12'><Message>At DAOPostImpl.java:[line 264]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.Query' start='143' end='143' sourcepath='org/simple/blog/tools/strings/Query.java' sourcefile='Query.java' startBytecode='1'><Message>At Query.java:[line 143]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='8ef55cdac555237241f5e58481a1821d' cweid='89' rank='12' abbrev='SECSQLIJDBC' category='SECURITY' priority='2' type='SQL_INJECTION_JDBC' instanceOccurrenceMax='0'><ShortMessage>Potential JDBC Injection</ShortMessage><LongMessage>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</LongMessage><Class classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' primary='true'><SourceLine classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='22' end='272' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java'><Message>At DAOPostImpl.java:[lines 22-272]</Message></SourceLine><Message>In class org.simple.blog.dao.implementations.blog.DAOPostImpl</Message></Class><Method isStatic='false' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' signature='(Ljava/lang/String;)Ljava/lang/Integer;' name='getCommentsCountByPost' primary='true'><SourceLine endBytecode='299' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='227' end='242' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.dao.implementations.blog.DAOPostImpl.getCommentsCountByPost(String)</Message></Method><SourceLine endBytecode='17' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='231' end='231' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java' startBytecode='17' primary='true'><Message>At DAOPostImpl.java:[line 231]</Message></SourceLine><String role='Sink method' value='java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;'><Message>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.query'><Message>Unknown source org/simple/blog/tools/strings/Query.query</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;</Message></String><SourceLine endBytecode='14' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='231' end='231' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java' startBytecode='14'><Message>At DAOPostImpl.java:[line 231]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.Query' start='143' end='143' sourcepath='org/simple/blog/tools/strings/Query.java' sourcefile='Query.java' startBytecode='1'><Message>At Query.java:[line 143]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='8c8411941d3cc0480bae4e0eedc59399' cweid='89' rank='12' abbrev='SECSQLIJDBC' category='SECURITY' priority='2' type='SQL_INJECTION_JDBC' instanceOccurrenceMax='0'><ShortMessage>Potential JDBC Injection</ShortMessage><LongMessage>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</LongMessage><Class classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' primary='true'><SourceLine classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='22' end='272' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java'><Message>At DAOPostImpl.java:[lines 22-272]</Message></SourceLine><Message>In class org.simple.blog.dao.implementations.blog.DAOPostImpl</Message></Class><Method isStatic='false' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' signature='()Ljava/lang/Integer;' name='getPageCount' primary='true'><SourceLine endBytecode='365' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='206' end='222' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.dao.implementations.blog.DAOPostImpl.getPageCount()</Message></Method><SourceLine endBytecode='15' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='207' end='207' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java' startBytecode='15' primary='true'><Message>At DAOPostImpl.java:[line 207]</Message></SourceLine><String role='Sink method' value='java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;'><Message>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.query'><Message>Unknown source org/simple/blog/tools/strings/Query.query</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;</Message></String><SourceLine endBytecode='12' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='207' end='207' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java' startBytecode='12'><Message>At DAOPostImpl.java:[line 207]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.Query' start='143' end='143' sourcepath='org/simple/blog/tools/strings/Query.java' sourcefile='Query.java' startBytecode='1'><Message>At Query.java:[line 143]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='c3aeff0800df84d74a1f0842effb460d' cweid='89' rank='12' abbrev='SECSQLIJDBC' category='SECURITY' priority='2' type='SQL_INJECTION_JDBC' instanceOccurrenceMax='0'><ShortMessage>Potential JDBC Injection</ShortMessage><LongMessage>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</LongMessage><Class classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' primary='true'><SourceLine classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='22' end='272' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java'><Message>At DAOPostImpl.java:[lines 22-272]</Message></SourceLine><Message>In class org.simple.blog.dao.implementations.blog.DAOPostImpl</Message></Class><Method isStatic='false' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' signature='(Ljava/lang/String;)Lorg/simple/blog/entities/blog/BlogPost;' name='getPostById' primary='true'><SourceLine endBytecode='300' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='31' end='47' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.dao.implementations.blog.DAOPostImpl.getPostById(String)</Message></Method><SourceLine endBytecode='15' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='32' end='32' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java' startBytecode='15' primary='true'><Message>At DAOPostImpl.java:[line 32]</Message></SourceLine><String role='Sink method' value='java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;'><Message>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.query'><Message>Unknown source org/simple/blog/tools/strings/Query.query</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;</Message></String><SourceLine endBytecode='12' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='33' end='33' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java' startBytecode='12'><Message>At DAOPostImpl.java:[line 33]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.Query' start='143' end='143' sourcepath='org/simple/blog/tools/strings/Query.java' sourcefile='Query.java' startBytecode='1'><Message>At Query.java:[line 143]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='9288792749f702cc27072cf76c5d2c22' cweid='89' rank='12' abbrev='SECSQLIJDBC' category='SECURITY' priority='2' type='SQL_INJECTION_JDBC' instanceOccurrenceMax='0'><ShortMessage>Potential JDBC Injection</ShortMessage><LongMessage>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</LongMessage><Class classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' primary='true'><SourceLine classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='22' end='272' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java'><Message>At DAOPostImpl.java:[lines 22-272]</Message></SourceLine><Message>In class org.simple.blog.dao.implementations.blog.DAOPostImpl</Message></Class><Method isStatic='false' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' signature='(Ljava/lang/Integer;)Ljava/util/List;' name='getPostsByPage' primary='true'><SourceLine endBytecode='356' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='133' end='148' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.dao.implementations.blog.DAOPostImpl.getPostsByPage(Integer)</Message></Method><SourceLine endBytecode='23' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='135' end='135' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java' startBytecode='23' primary='true'><Message>At DAOPostImpl.java:[line 135]</Message></SourceLine><String role='Sink method' value='java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;'><Message>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.query'><Message>Unknown source org/simple/blog/tools/strings/Query.query</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;</Message></String><SourceLine endBytecode='20' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='135' end='135' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java' startBytecode='20'><Message>At DAOPostImpl.java:[line 135]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.Query' start='143' end='143' sourcepath='org/simple/blog/tools/strings/Query.java' sourcefile='Query.java' startBytecode='1'><Message>At Query.java:[line 143]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='c554b4ba96a165ba9fbf814e62bf9d1c' cweid='89' rank='12' abbrev='SECSQLIJDBC' category='SECURITY' priority='2' type='SQL_INJECTION_JDBC' instanceOccurrenceMax='0'><ShortMessage>Potential JDBC Injection</ShortMessage><LongMessage>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</LongMessage><Class classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' primary='true'><SourceLine classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='22' end='272' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java'><Message>At DAOPostImpl.java:[lines 22-272]</Message></SourceLine><Message>In class org.simple.blog.dao.implementations.blog.DAOPostImpl</Message></Class><Method isStatic='false' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' signature='(Ljava/lang/String;)Ljava/util/List;' name='getPostsByUserId' primary='true'><SourceLine endBytecode='333' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='54' end='71' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.dao.implementations.blog.DAOPostImpl.getPostsByUserId(String)</Message></Method><SourceLine endBytecode='23' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='56' end='56' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java' startBytecode='23' primary='true'><Message>At DAOPostImpl.java:[line 56]</Message></SourceLine><String role='Sink method' value='java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;'><Message>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.query'><Message>Unknown source org/simple/blog/tools/strings/Query.query</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;</Message></String><SourceLine endBytecode='20' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='57' end='57' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java' startBytecode='20'><Message>At DAOPostImpl.java:[line 57]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.Query' start='143' end='143' sourcepath='org/simple/blog/tools/strings/Query.java' sourcefile='Query.java' startBytecode='1'><Message>At Query.java:[line 143]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='4ea76868f54d5a47a094e75c9ec119f' cweid='89' rank='12' abbrev='SECSQLIJDBC' category='SECURITY' priority='2' type='SQL_INJECTION_JDBC' instanceOccurrenceMax='0'><ShortMessage>Potential JDBC Injection</ShortMessage><LongMessage>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</LongMessage><Class classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' primary='true'><SourceLine classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='22' end='272' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java'><Message>At DAOPostImpl.java:[lines 22-272]</Message></SourceLine><Message>In class org.simple.blog.dao.implementations.blog.DAOPostImpl</Message></Class><Method isStatic='false' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' signature='(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V' name='updatePost' primary='true'><SourceLine endBytecode='310' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='96' end='109' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.dao.implementations.blog.DAOPostImpl.updatePost(String, String, String, String)</Message></Method><SourceLine endBytecode='15' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='97' end='97' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java' startBytecode='15' primary='true'><Message>At DAOPostImpl.java:[line 97]</Message></SourceLine><String role='Sink method' value='java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;'><Message>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.query'><Message>Unknown source org/simple/blog/tools/strings/Query.query</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;</Message></String><SourceLine endBytecode='12' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='97' end='97' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java' startBytecode='12'><Message>At DAOPostImpl.java:[line 97]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.Query' start='143' end='143' sourcepath='org/simple/blog/tools/strings/Query.java' sourcefile='Query.java' startBytecode='1'><Message>At Query.java:[line 143]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='1981d80dd11fd64b786de4326f34e7bb' cweid='89' rank='12' abbrev='SECSQLIJDBC' category='SECURITY' priority='2' type='SQL_INJECTION_JDBC' instanceOccurrenceMax='0'><ShortMessage>Potential JDBC Injection</ShortMessage><LongMessage>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</LongMessage><Class classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' primary='true'><SourceLine classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='22' end='272' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java'><Message>At DAOPostImpl.java:[lines 22-272]</Message></SourceLine><Message>In class org.simple.blog.dao.implementations.blog.DAOPostImpl</Message></Class><Method isStatic='false' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' signature='(Lorg/simple/blog/entities/blog/BlogPost;)V' name='updatePost' primary='true'><SourceLine endBytecode='286' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='114' end='127' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.dao.implementations.blog.DAOPostImpl.updatePost(BlogPost)</Message></Method><SourceLine endBytecode='15' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='115' end='115' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java' startBytecode='15' primary='true'><Message>At DAOPostImpl.java:[line 115]</Message></SourceLine><String role='Sink method' value='java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;'><Message>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.query'><Message>Unknown source org/simple/blog/tools/strings/Query.query</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;</Message></String><SourceLine endBytecode='12' classname='org.simple.blog.dao.implementations.blog.DAOPostImpl' start='115' end='115' sourcepath='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' sourcefile='DAOPostImpl.java' startBytecode='12'><Message>At DAOPostImpl.java:[line 115]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.Query' start='143' end='143' sourcepath='org/simple/blog/tools/strings/Query.java' sourcefile='Query.java' startBytecode='1'><Message>At Query.java:[line 143]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='7676671a1524822642ae4a8f3efa59d6' cweid='89' rank='12' abbrev='SECSQLIJDBC' category='SECURITY' priority='2' type='SQL_INJECTION_JDBC' instanceOccurrenceMax='0'><ShortMessage>Potential JDBC Injection</ShortMessage><LongMessage>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</LongMessage><Class classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' primary='true'><SourceLine classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='16' end='231' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java'><Message>At DAOUserImpl.java:[lines 16-231]</Message></SourceLine><Message>In class org.simple.blog.dao.implementations.blog.DAOUserImpl</Message></Class><Method isStatic='false' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' signature='(Lorg/simple/blog/entities/blog/BlogUser;)V' name='addUser' primary='true'><SourceLine endBytecode='301' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='87' end='101' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.dao.implementations.blog.DAOUserImpl.addUser(BlogUser)</Message></Method><SourceLine endBytecode='15' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='88' end='88' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java' startBytecode='15' primary='true'><Message>At DAOUserImpl.java:[line 88]</Message></SourceLine><String role='Sink method' value='java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;'><Message>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.query'><Message>Unknown source org/simple/blog/tools/strings/Query.query</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;</Message></String><SourceLine endBytecode='12' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='88' end='88' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java' startBytecode='12'><Message>At DAOUserImpl.java:[line 88]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.Query' start='143' end='143' sourcepath='org/simple/blog/tools/strings/Query.java' sourcefile='Query.java' startBytecode='1'><Message>At Query.java:[line 143]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='7b4aa764eb31444c43a02ef04f8a15f6' cweid='89' rank='12' abbrev='SECSQLIJDBC' category='SECURITY' priority='2' type='SQL_INJECTION_JDBC' instanceOccurrenceMax='0'><ShortMessage>Potential JDBC Injection</ShortMessage><LongMessage>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</LongMessage><Class classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' primary='true'><SourceLine classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='16' end='231' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java'><Message>At DAOUserImpl.java:[lines 16-231]</Message></SourceLine><Message>In class org.simple.blog.dao.implementations.blog.DAOUserImpl</Message></Class><Method isStatic='false' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' signature='(Ljava/lang/String;)V' name='deleteUserByEmail' primary='true'><SourceLine endBytecode='224' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='222' end='231' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.dao.implementations.blog.DAOUserImpl.deleteUserByEmail(String)</Message></Method><SourceLine endBytecode='15' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='223' end='223' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java' startBytecode='15' primary='true'><Message>At DAOUserImpl.java:[line 223]</Message></SourceLine><String role='Sink method' value='java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;'><Message>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.query'><Message>Unknown source org/simple/blog/tools/strings/Query.query</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;</Message></String><SourceLine endBytecode='12' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='223' end='223' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java' startBytecode='12'><Message>At DAOUserImpl.java:[line 223]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.Query' start='143' end='143' sourcepath='org/simple/blog/tools/strings/Query.java' sourcefile='Query.java' startBytecode='1'><Message>At Query.java:[line 143]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='df48cb1287835495b654faf7837bb491' cweid='89' rank='12' abbrev='SECSQLIJDBC' category='SECURITY' priority='2' type='SQL_INJECTION_JDBC' instanceOccurrenceMax='0'><ShortMessage>Potential JDBC Injection</ShortMessage><LongMessage>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</LongMessage><Class classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' primary='true'><SourceLine classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='16' end='231' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java'><Message>At DAOUserImpl.java:[lines 16-231]</Message></SourceLine><Message>In class org.simple.blog.dao.implementations.blog.DAOUserImpl</Message></Class><Method isStatic='false' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' signature='(Ljava/lang/String;)Lorg/simple/blog/entities/blog/BlogUser;' name='getUserByEmail' primary='true'><SourceLine endBytecode='297' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='184' end='200' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.dao.implementations.blog.DAOUserImpl.getUserByEmail(String)</Message></Method><SourceLine endBytecode='15' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='185' end='185' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java' startBytecode='15' primary='true'><Message>At DAOUserImpl.java:[line 185]</Message></SourceLine><String role='Sink method' value='java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;'><Message>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.query'><Message>Unknown source org/simple/blog/tools/strings/Query.query</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;</Message></String><SourceLine endBytecode='12' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='186' end='186' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java' startBytecode='12'><Message>At DAOUserImpl.java:[line 186]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.Query' start='143' end='143' sourcepath='org/simple/blog/tools/strings/Query.java' sourcefile='Query.java' startBytecode='1'><Message>At Query.java:[line 143]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='2c312383d521b47cdd6f2e749fedf2b8' cweid='89' rank='12' abbrev='SECSQLIJDBC' category='SECURITY' priority='2' type='SQL_INJECTION_JDBC' instanceOccurrenceMax='0'><ShortMessage>Potential JDBC Injection</ShortMessage><LongMessage>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</LongMessage><Class classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' primary='true'><SourceLine classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='16' end='231' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java'><Message>At DAOUserImpl.java:[lines 16-231]</Message></SourceLine><Message>In class org.simple.blog.dao.implementations.blog.DAOUserImpl</Message></Class><Method isStatic='false' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' signature='(Ljava/lang/String;Ljava/lang/String;)Lorg/simple/blog/entities/blog/BlogUser;' name='getUserByEmailAndPassword' primary='true'><SourceLine endBytecode='324' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='63' end='81' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.dao.implementations.blog.DAOUserImpl.getUserByEmailAndPassword(String, String)</Message></Method><SourceLine endBytecode='15' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='64' end='64' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java' startBytecode='15' primary='true'><Message>At DAOUserImpl.java:[line 64]</Message></SourceLine><String role='Sink method' value='java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;'><Message>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.query'><Message>Unknown source org/simple/blog/tools/strings/Query.query</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;</Message></String><SourceLine endBytecode='12' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='65' end='65' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java' startBytecode='12'><Message>At DAOUserImpl.java:[line 65]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.Query' start='143' end='143' sourcepath='org/simple/blog/tools/strings/Query.java' sourcefile='Query.java' startBytecode='1'><Message>At Query.java:[line 143]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='18939d14ae03f3786bc0e185b5f115eb' cweid='89' rank='12' abbrev='SECSQLIJDBC' category='SECURITY' priority='2' type='SQL_INJECTION_JDBC' instanceOccurrenceMax='0'><ShortMessage>Potential JDBC Injection</ShortMessage><LongMessage>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</LongMessage><Class classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' primary='true'><SourceLine classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='16' end='231' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java'><Message>At DAOUserImpl.java:[lines 16-231]</Message></SourceLine><Message>In class org.simple.blog.dao.implementations.blog.DAOUserImpl</Message></Class><Method isStatic='false' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' signature='(Ljava/lang/String;)Lorg/simple/blog/entities/blog/BlogUser;' name='getUserById' primary='true'><SourceLine endBytecode='300' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='23' end='39' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.dao.implementations.blog.DAOUserImpl.getUserById(String)</Message></Method><SourceLine endBytecode='15' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='24' end='24' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java' startBytecode='15' primary='true'><Message>At DAOUserImpl.java:[line 24]</Message></SourceLine><String role='Sink method' value='java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;'><Message>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.query'><Message>Unknown source org/simple/blog/tools/strings/Query.query</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;</Message></String><SourceLine endBytecode='12' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='25' end='25' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java' startBytecode='12'><Message>At DAOUserImpl.java:[line 25]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.Query' start='143' end='143' sourcepath='org/simple/blog/tools/strings/Query.java' sourcefile='Query.java' startBytecode='1'><Message>At Query.java:[line 143]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='2578f73bd9647abad97be56bee33b5fa' cweid='89' rank='12' abbrev='SECSQLIJDBC' category='SECURITY' priority='2' type='SQL_INJECTION_JDBC' instanceOccurrenceMax='0'><ShortMessage>Potential JDBC Injection</ShortMessage><LongMessage>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</LongMessage><Class classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' primary='true'><SourceLine classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='16' end='231' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java'><Message>At DAOUserImpl.java:[lines 16-231]</Message></SourceLine><Message>In class org.simple.blog.dao.implementations.blog.DAOUserImpl</Message></Class><Method isStatic='false' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' signature='(Ljava/lang/String;)Lorg/simple/blog/entities/blog/BlogUser;' name='getUserByToken' primary='true'><SourceLine endBytecode='297' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='162' end='178' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.dao.implementations.blog.DAOUserImpl.getUserByToken(String)</Message></Method><SourceLine endBytecode='15' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='163' end='163' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java' startBytecode='15' primary='true'><Message>At DAOUserImpl.java:[line 163]</Message></SourceLine><String role='Sink method' value='java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;'><Message>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.query'><Message>Unknown source org/simple/blog/tools/strings/Query.query</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;</Message></String><SourceLine endBytecode='12' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='164' end='164' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java' startBytecode='12'><Message>At DAOUserImpl.java:[line 164]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.Query' start='143' end='143' sourcepath='org/simple/blog/tools/strings/Query.java' sourcefile='Query.java' startBytecode='1'><Message>At Query.java:[line 143]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='f5ca20acb40b966cfa3b36c6156f457a' cweid='89' rank='12' abbrev='SECSQLIJDBC' category='SECURITY' priority='2' type='SQL_INJECTION_JDBC' instanceOccurrenceMax='0'><ShortMessage>Potential JDBC Injection</ShortMessage><LongMessage>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</LongMessage><Class classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' primary='true'><SourceLine classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='16' end='231' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java'><Message>At DAOUserImpl.java:[lines 16-231]</Message></SourceLine><Message>In class org.simple.blog.dao.implementations.blog.DAOUserImpl</Message></Class><Method isStatic='false' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' signature='(Ljava/lang/String;)Z' name='isExistUserByEmail' primary='true'><SourceLine endBytecode='242' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='45' end='57' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.dao.implementations.blog.DAOUserImpl.isExistUserByEmail(String)</Message></Method><SourceLine endBytecode='15' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='46' end='46' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java' startBytecode='15' primary='true'><Message>At DAOUserImpl.java:[line 46]</Message></SourceLine><String role='Sink method' value='java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;'><Message>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.query'><Message>Unknown source org/simple/blog/tools/strings/Query.query</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;</Message></String><SourceLine endBytecode='12' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='47' end='47' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java' startBytecode='12'><Message>At DAOUserImpl.java:[line 47]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.Query' start='143' end='143' sourcepath='org/simple/blog/tools/strings/Query.java' sourcefile='Query.java' startBytecode='1'><Message>At Query.java:[line 143]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='b9b7162c45593a578322c8ef79a757cb' cweid='89' rank='12' abbrev='SECSQLIJDBC' category='SECURITY' priority='2' type='SQL_INJECTION_JDBC' instanceOccurrenceMax='0'><ShortMessage>Potential JDBC Injection</ShortMessage><LongMessage>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</LongMessage><Class classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' primary='true'><SourceLine classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='16' end='231' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java'><Message>At DAOUserImpl.java:[lines 16-231]</Message></SourceLine><Message>In class org.simple.blog.dao.implementations.blog.DAOUserImpl</Message></Class><Method isStatic='false' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' signature='(Ljava/lang/String;Ljava/lang/String;)V' name='setNewPassword' primary='true'><SourceLine endBytecode='256' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='206' end='217' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.dao.implementations.blog.DAOUserImpl.setNewPassword(String, String)</Message></Method><SourceLine endBytecode='15' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='207' end='207' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java' startBytecode='15' primary='true'><Message>At DAOUserImpl.java:[line 207]</Message></SourceLine><String role='Sink method' value='java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;'><Message>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.query'><Message>Unknown source org/simple/blog/tools/strings/Query.query</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;</Message></String><SourceLine endBytecode='12' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='207' end='207' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java' startBytecode='12'><Message>At DAOUserImpl.java:[line 207]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.Query' start='143' end='143' sourcepath='org/simple/blog/tools/strings/Query.java' sourcefile='Query.java' startBytecode='1'><Message>At Query.java:[line 143]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='1972057f271d85a5c360c9c0c60d6d1c' cweid='89' rank='12' abbrev='SECSQLIJDBC' category='SECURITY' priority='2' type='SQL_INJECTION_JDBC' instanceOccurrenceMax='0'><ShortMessage>Potential JDBC Injection</ShortMessage><LongMessage>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</LongMessage><Class classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' primary='true'><SourceLine classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='16' end='231' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java'><Message>At DAOUserImpl.java:[lines 16-231]</Message></SourceLine><Message>In class org.simple.blog.dao.implementations.blog.DAOUserImpl</Message></Class><Method isStatic='false' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' signature='(Ljava/lang/String;Ljava/lang/String;)V' name='setResetToken' primary='true'><SourceLine endBytecode='283' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='142' end='157' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.dao.implementations.blog.DAOUserImpl.setResetToken(String, String)</Message></Method><SourceLine endBytecode='15' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='143' end='143' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java' startBytecode='15' primary='true'><Message>At DAOUserImpl.java:[line 143]</Message></SourceLine><String role='Sink method' value='java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;'><Message>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.query'><Message>Unknown source org/simple/blog/tools/strings/Query.query</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;</Message></String><SourceLine endBytecode='12' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='143' end='143' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java' startBytecode='12'><Message>At DAOUserImpl.java:[line 143]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.Query' start='143' end='143' sourcepath='org/simple/blog/tools/strings/Query.java' sourcefile='Query.java' startBytecode='1'><Message>At Query.java:[line 143]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='94c7473e6952f0f2b3da97974ac8ed8e' cweid='89' rank='12' abbrev='SECSQLIJDBC' category='SECURITY' priority='2' type='SQL_INJECTION_JDBC' instanceOccurrenceMax='0'><ShortMessage>Potential JDBC Injection</ShortMessage><LongMessage>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</LongMessage><Class classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' primary='true'><SourceLine classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='16' end='231' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java'><Message>At DAOUserImpl.java:[lines 16-231]</Message></SourceLine><Message>In class org.simple.blog.dao.implementations.blog.DAOUserImpl</Message></Class><Method isStatic='false' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' signature='(Lorg/simple/blog/entities/blog/BlogUser;)V' name='updateUser' primary='true'><SourceLine endBytecode='286' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='124' end='137' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.dao.implementations.blog.DAOUserImpl.updateUser(BlogUser)</Message></Method><SourceLine endBytecode='15' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='125' end='125' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java' startBytecode='15' primary='true'><Message>At DAOUserImpl.java:[line 125]</Message></SourceLine><String role='Sink method' value='java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;'><Message>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.query'><Message>Unknown source org/simple/blog/tools/strings/Query.query</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;</Message></String><SourceLine endBytecode='12' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='125' end='125' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java' startBytecode='12'><Message>At DAOUserImpl.java:[line 125]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.Query' start='143' end='143' sourcepath='org/simple/blog/tools/strings/Query.java' sourcefile='Query.java' startBytecode='1'><Message>At Query.java:[line 143]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='19bc9f93ccb9d522eb3b1404f40a291c' cweid='89' rank='12' abbrev='SECSQLIJDBC' category='SECURITY' priority='2' type='SQL_INJECTION_JDBC' instanceOccurrenceMax='0'><ShortMessage>Potential JDBC Injection</ShortMessage><LongMessage>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</LongMessage><Class classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' primary='true'><SourceLine classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='16' end='231' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java'><Message>At DAOUserImpl.java:[lines 16-231]</Message></SourceLine><Message>In class org.simple.blog.dao.implementations.blog.DAOUserImpl</Message></Class><Method isStatic='false' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' signature='(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V' name='updateUserCommon' primary='true'><SourceLine endBytecode='310' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='106' end='119' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java' startBytecode='0'></SourceLine><Message>In method org.simple.blog.dao.implementations.blog.DAOUserImpl.updateUserCommon(String, String, String, String)</Message></Method><SourceLine endBytecode='15' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='107' end='107' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java' startBytecode='15' primary='true'><Message>At DAOUserImpl.java:[line 107]</Message></SourceLine><String role='Sink method' value='java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;'><Message>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.query'><Message>Unknown source org/simple/blog/tools/strings/Query.query</Message></String><String role='Unknown source' value='org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;'><Message>Unknown source org/simple/blog/tools/strings/Query.getQuery()Ljava/lang/String;</Message></String><SourceLine endBytecode='12' classname='org.simple.blog.dao.implementations.blog.DAOUserImpl' start='107' end='107' sourcepath='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' sourcefile='DAOUserImpl.java' startBytecode='12'><Message>At DAOUserImpl.java:[line 107]</Message></SourceLine><SourceLine endBytecode='1' classname='org.simple.blog.tools.strings.Query' start='143' end='143' sourcepath='org/simple/blog/tools/strings/Query.java' sourcefile='Query.java' startBytecode='1'><Message>At Query.java:[line 143]</Message></SourceLine></BugInstance><BugCategory category='SECURITY'><Description>Security</Description></BugCategory><BugPattern cweid='89' abbrev='SECSQLIJDBC' category='SECURITY' type='SQL_INJECTION_JDBC'><ShortDescription>Potential JDBC Injection</ShortDescription><Details>
            
&lt;p&gt;
The input values included in SQL queries need to be passed in safely.
Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection.
&lt;/p&gt;

&lt;p&gt;
    &lt;b&gt;Vulnerable Code:&lt;/b&gt;&lt;br/&gt;
    &lt;pre&gt;Connection conn = [...];
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("update COFFEES set SALES = "+nbSales+" where COF_NAME = '"+coffeeName+"'");&lt;/pre&gt;
&lt;/p&gt;
&lt;p&gt;
    &lt;b&gt;Solution:&lt;/b&gt;&lt;br/&gt;
    &lt;pre&gt;Connection conn = [...];
conn.prepareStatement("update COFFEES set SALES = ? where COF_NAME = ?");
updateSales.setInt(1, nbSales);
updateSales.setString(2, coffeeName);&lt;/pre&gt;
&lt;/p&gt;
&lt;br/&gt;

&lt;b&gt;References (JDBC)&lt;/b&gt;&lt;br/&gt;
&lt;a href="https://docs.oracle.com/javase/tutorial/jdbc/basics/prepared.html"&gt;Oracle Documentation: The Java Tutorials &amp;gt; Prepared Statements&lt;/a&gt;&lt;br/&gt;
&lt;b&gt;References (SQL injection)&lt;/b&gt;&lt;br/&gt;
&lt;a href="http://projects.webappsec.org/w/page/13246963/SQL%20Injection"&gt;WASC-19: SQL Injection&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://capec.mitre.org/data/definitions/66.html"&gt;CAPEC-66: SQL Injection&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://cwe.mitre.org/data/definitions/89.html"&gt;CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://www.owasp.org/index.php/Top_10_2013-A1-Injection"&gt;OWASP: Top 10 2013-A1-Injection&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://www.owasp.org/index.php/SQL_Injection_Prevention_Cheat_Sheet"&gt;OWASP: SQL Injection Prevention Cheat Sheet&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://www.owasp.org/index.php/Query_Parameterization_Cheat_Sheet"&gt;OWASP: Query Parameterization Cheat Sheet&lt;/a&gt;&lt;br/&gt;
&lt;/p&gt;

        </Details></BugPattern><BugPattern cweid='90' abbrev='SECLDAPI' category='SECURITY' type='LDAP_INJECTION'><ShortDescription>Potential LDAP Injection</ShortDescription><Details>
            
&lt;p&gt;
Just like SQL, all inputs passed to an LDAP query need to be passed in safely. Unfortunately, LDAP doesn't have prepared statement interfaces like SQL.
Therefore, the primary defense against LDAP injection is strong input validation of any untrusted data before including it in an LDAP query.
&lt;/p&gt;
&lt;p&gt;
    &lt;strong&gt;Code at risk:&lt;/strong&gt;&lt;br/&gt;
    &lt;pre&gt;NamingEnumeration&amp;lt;SearchResult&amp;gt; answers = context.search("dc=People,dc=example,dc=com",
        "(uid=" + username + ")", ctrls);&lt;/pre&gt;
&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;&lt;strong&gt;Solution:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;
Safe evaluation of Java code using "StringUtils" library.&lt;br/&gt;
&lt;pre&gt;if(StringUtils.isAlphanumeric(username)) {
    NamingEnumeration&amp;lt;SearchResult&amp;gt; answers = context.search("dc=People,dc=example,dc=com",
        "(uid=" + username + ")", ctrls);
}&lt;/pre&gt;
&lt;/p&gt;
&lt;br/&gt;&lt;p&gt;
&lt;strong&gt;References&lt;/strong&gt;&lt;br/&gt;
&lt;a href="https://cheatsheetseries.owasp.org/cheatsheets/LDAP_Injection_Prevention_Cheat_Sheet.html"&gt;LDAP Injection Prevention Cheat Sheet&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A1-Injection"&gt;OWASP: Top 10 A1:2017-Injection&lt;/a&gt;&lt;br/&gt;
&lt;a href="http://projects.webappsec.org/w/page/13246947/LDAP%20Injection"&gt;WASC-29: LDAP Injection&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://cwe.mitre.org/data/definitions/90.html"&gt;CWE-90: Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')&lt;/a&gt;&lt;br/&gt;
&lt;/p&gt;

        </Details></BugPattern><BugPattern abbrev='SECSF' category='SECURITY' type='SPRING_FILE_DISCLOSURE'><ShortDescription>Spring File Disclosure</ShortDescription><Details>
            
&lt;p&gt;
Constructing a server-side redirect path with user input could allow an attacker to download application binaries (including application classes or jar files) or view arbitrary files within protected directories.&lt;br/&gt;
An attacker may be able to forge a request parameter to match sensitive file locations. For example, requesting &lt;code&gt;"http://example.com/?returnURL=WEB-INF/applicationContext.xml"&lt;/code&gt; would display the application's &lt;code&gt;applicationContext.xml&lt;/code&gt; file. The attacker would be able to locate and download the &lt;code&gt;applicationContext.xml&lt;/code&gt; referenced in the other configuration files, and even class files or jar files, obtaining sensitive information and launching other types of attacks.
&lt;/p&gt;
&lt;p&gt;
    &lt;b&gt;Vulnerable Code:&lt;/b&gt;&lt;br/&gt;
&lt;pre&gt;...
String returnURL = request.getParameter("returnURL");
return new ModelAndView(returnURL);
...&lt;/pre&gt;
&lt;/p&gt;
&lt;p&gt;
    &lt;b&gt;Solution:&lt;/b&gt;&lt;br/&gt;
Avoid constructing server-side redirects using user controlled input.
&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;
&lt;b&gt;References&lt;/b&gt;&lt;br/&gt;
&lt;a href="https://cwe.mitre.org/data/definitions/552.html"&gt;CWE-552: Files or Directories Accessible to External Parties&lt;/a&gt;&lt;br/&gt;
&lt;/p&gt;
            
        </Details></BugPattern><BugPattern cweid='352' abbrev='SECSPRCSRFURM' category='SECURITY' type='SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING'><ShortDescription>Spring CSRF unrestricted RequestMapping</ShortDescription><Details>
            
&lt;p&gt;Methods annotated with &lt;code&gt;RequestMapping&lt;/code&gt; are by default mapped to all the HTTP request methods.
However, Spring Security's CSRF protection is not enabled by default
for the HTTP request methods &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;HEAD&lt;/code&gt;, &lt;code&gt;TRACE&lt;/code&gt;, and &lt;code&gt;OPTIONS&lt;/code&gt;
(as this could cause the tokens to be leaked).
Therefore, state-changing methods annotated with &lt;code&gt;RequestMapping&lt;/code&gt; and not narrowing the mapping
to the HTTP request methods &lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt;, or &lt;code&gt;PATCH&lt;/code&gt;
are vulnerable to CSRF attacks.&lt;/p&gt;
&lt;p&gt;
    &lt;b&gt;Vulnerable Code:&lt;/b&gt;&lt;br/&gt;
&lt;pre&gt;@Controller
public class UnsafeController {

    @RequestMapping("/path")
    public void writeData() {
        // State-changing operations performed within this method.
    }
}&lt;/pre&gt;
&lt;/p&gt;
&lt;p&gt;
    &lt;b&gt;Solution (Spring Framework 4.3 and later):&lt;/b&gt;&lt;br/&gt;
&lt;pre&gt;@Controller
public class SafeController {

    /**
     * For methods without side-effects use @GetMapping.
     */
    @GetMapping("/path")
    public String readData() {
        // No state-changing operations performed within this method.
        return "";
    }

    /**
     * For state-changing methods use either @PostMapping, @PutMapping, @DeleteMapping, or @PatchMapping.
     */
    @PostMapping("/path")
    public void writeData() {
        // State-changing operations performed within this method.
    }
}&lt;/pre&gt;
&lt;/p&gt;
&lt;p&gt;
    &lt;b&gt;Solution (Before Spring Framework 4.3):&lt;/b&gt;&lt;br/&gt;
&lt;pre&gt;@Controller
public class SafeController {

    /**
     * For methods without side-effects use either
     * RequestMethod.GET, RequestMethod.HEAD, RequestMethod.TRACE, or RequestMethod.OPTIONS.
     */
    @RequestMapping(value = "/path", method = RequestMethod.GET)
    public String readData() {
        // No state-changing operations performed within this method.
        return "";
    }

    /**
     * For state-changing methods use either
     * RequestMethod.POST, RequestMethod.PUT, RequestMethod.DELETE, or RequestMethod.PATCH.
     */
    @RequestMapping(value = "/path", method = RequestMethod.POST)
    public void writeData() {
        // State-changing operations performed within this method.
    }
}&lt;/pre&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;References&lt;/b&gt;&lt;br/&gt;
&lt;a href="https://docs.spring.io/spring-security/site/docs/current/reference/html/csrf.html#csrf-use-proper-verbs"&gt;Spring Security Official Documentation: Use proper HTTP verbs (CSRF protection)&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://www.owasp.org/index.php/Cross-Site_Request_Forgery_%28CSRF%29"&gt;OWASP: Cross-Site Request Forgery&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://www.owasp.org/index.php/Cross-Site_Request_Forgery_%28CSRF%29_Prevention_Cheat_Sheet"&gt;OWASP: CSRF Prevention Cheat Sheet&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://cwe.mitre.org/data/definitions/352.html"&gt;CWE-352: Cross-Site Request Forgery (CSRF)&lt;/a&gt;
&lt;/p&gt;

        </Details></BugPattern><BugCode abbrev='SECLDAPI'><Description>LDAP Injection</Description></BugCode><BugCode abbrev='SECSF'><Description>Spring File Disclosure</Description></BugCode><BugCode abbrev='SECSPRCSRFURM'><Description>Spring CSRF Unrestricted RequestMapping</Description></BugCode><BugCode abbrev='SECSQLIJDBC'><Description>SQL Injection (JDBC)</Description></BugCode><Errors missingClasses='0' errors='0'></Errors><FindBugsSummary num_packages='10' total_classes='36' priority_1='22' priority_2='63' total_size='1481' clock_seconds='4.37' referenced_classes='122' vm_version='25.281-b09' total_bugs='85' java_version='1.8.0_281' gc_seconds='0.15' alloc_mbytes='455.50' cpu_seconds='19.98' peak_mbytes='215.97' timestamp='Sun, 14 May 2023 20:30:55 +0300'><FileStats path='org/simple/blog/controllers/AbstractController.java' size='25' bugHash='0cdf84554ace05dbc8e4fe86093d0a2c' bugCount='1'></FileStats><FileStats path='org/simple/blog/controllers/AddController.java' size='42' bugHash='e7f21002305fa1eb7903c5c1ef2eb063' bugCount='5'></FileStats><FileStats path='org/simple/blog/controllers/EditController.java' size='96' bugHash='9a12b503eac56fc4deb26e75d547084a' bugCount='17'></FileStats><FileStats path='org/simple/blog/controllers/LoginController.java' size='52' bugHash='6632de320b17838450512ec3e72b0bde' bugCount='12'></FileStats><FileStats path='org/simple/blog/controllers/RedirectController.java' size='40' bugHash='40a9566be4054811792e2af808a78628' bugCount='11'></FileStats><FileStats path='org/simple/blog/controllers/ShowController.java' size='74' bugHash='97faa3f349ac05bdd613f5207111f0a3' bugCount='9'></FileStats><FileStats path='org/simple/blog/dao/connection/ConnectionInterface.java' size='3' bugCount='0'></FileStats><FileStats path='org/simple/blog/dao/connection/Oracle.java' size='38' bugHash='72ca5ef16111a3144034b640526f32a5' bugCount='1'></FileStats><FileStats path='org/simple/blog/dao/implementations/blog/DAOCommentImpl.java' size='118' bugHash='a20904512098af35c73801643eacf31b' bugCount='7'></FileStats><FileStats path='org/simple/blog/dao/implementations/blog/DAOPostImpl.java' size='172' bugHash='626e2f199f92e29ec13fa06ec9005359' bugCount='11'></FileStats><FileStats path='org/simple/blog/dao/implementations/blog/DAOUserImpl.java' size='154' bugHash='9b77cb1e393488d8dccb6e9a29ff0c59' bugCount='11'></FileStats><FileStats path='org/simple/blog/dao/interfaces/blog/DAOComment.java' size='11' bugCount='0'></FileStats><FileStats path='org/simple/blog/dao/interfaces/blog/DAOPost.java' size='17' bugCount='0'></FileStats><FileStats path='org/simple/blog/dao/interfaces/blog/DAOUser.java' size='12' bugCount='0'></FileStats><FileStats path='org/simple/blog/entities/blog/BlogComment.java' size='45' bugCount='0'></FileStats><FileStats path='org/simple/blog/entities/blog/BlogCommentSet.java' size='16' bugCount='0'></FileStats><FileStats path='org/simple/blog/entities/blog/BlogPost.java' size='40' bugCount='0'></FileStats><FileStats path='org/simple/blog/entities/blog/BlogPostSet.java' size='12' bugCount='0'></FileStats><FileStats path='org/simple/blog/entities/blog/BlogUser.java' size='57' bugCount='0'></FileStats><FileStats path='org/simple/blog/tools/AppProperties.java' size='66' bugCount='0'></FileStats><FileStats path='org/simple/blog/tools/BlogConstants.java' size='10' bugCount='0'></FileStats><FileStats path='org/simple/blog/tools/MailUtils.java' size='33' bugCount='0'></FileStats><FileStats path='org/simple/blog/tools/config/DataSourceConfig.java' size='3' bugCount='0'></FileStats><FileStats path='org/simple/blog/tools/config/DispatcherServletInitializer.java' size='3' bugCount='0'></FileStats><FileStats path='org/simple/blog/tools/config/FaviconConfiguration.java' size='3' bugCount='0'></FileStats><FileStats path='org/simple/blog/tools/config/MVCConfig.java' size='3' bugCount='0'></FileStats><FileStats path='org/simple/blog/tools/custom/exceptions/ConnectionFailedException.java' size='10' bugCount='0'></FileStats><FileStats path='org/simple/blog/tools/custom/exceptions/EntityParseException.java' size='10' bugCount='0'></FileStats><FileStats path='org/simple/blog/tools/custom/exceptions/WrongEntityIdException.java' size='10' bugCount='0'></FileStats><FileStats path='org/simple/blog/tools/custom/exceptions/WrongLoginDataException.java' size='10' bugCount='0'></FileStats><FileStats path='org/simple/blog/tools/logger/CustomLogger.java' size='6' bugCount='0'></FileStats><FileStats path='org/simple/blog/tools/strings/AttributeName.java' size='23' bugCount='0'></FileStats><FileStats path='org/simple/blog/tools/strings/PageName.java' size='33' bugCount='0'></FileStats><FileStats path='org/simple/blog/tools/strings/Query.java' size='219' bugCount='0'></FileStats><FileStats path='org/simple/blog/tools/strings/Strings.java' size='15' bugCount='0'></FileStats><PackageStats package='org.simple.blog.controllers' priority_1='22' total_bugs='55' priority_2='33' total_size='329' total_types='6'><ClassStats bugs='1' size='25' priority_2='1' interface='false' sourceFile='AbstractController.java' class='org.simple.blog.controllers.AbstractController'></ClassStats><ClassStats bugs='5' size='42' priority_1='3' priority_2='2' interface='false' sourceFile='AddController.java' class='org.simple.blog.controllers.AddController'></ClassStats><ClassStats bugs='17' size='96' priority_1='7' priority_2='10' interface='false' sourceFile='EditController.java' class='org.simple.blog.controllers.EditController'></ClassStats><ClassStats bugs='12' size='52' priority_1='4' priority_2='8' interface='false' sourceFile='LoginController.java' class='org.simple.blog.controllers.LoginController'></ClassStats><ClassStats bugs='11' size='40' priority_1='5' priority_2='6' interface='false' sourceFile='RedirectController.java' class='org.simple.blog.controllers.RedirectController'></ClassStats><ClassStats bugs='9' size='74' priority_1='3' priority_2='6' interface='false' sourceFile='ShowController.java' class='org.simple.blog.controllers.ShowController'></ClassStats></PackageStats><PackageStats package='org.simple.blog.dao.connection' total_bugs='1' priority_2='1' total_size='41' total_types='2'><ClassStats bugs='0' size='3' interface='true' sourceFile='ConnectionInterface.java' class='org.simple.blog.dao.connection.ConnectionInterface'></ClassStats><ClassStats bugs='1' size='38' priority_2='1' interface='false' sourceFile='Oracle.java' class='org.simple.blog.dao.connection.Oracle'></ClassStats></PackageStats><PackageStats package='org.simple.blog.dao.implementations.blog' total_bugs='29' priority_2='29' total_size='444' total_types='3'><ClassStats bugs='7' size='118' priority_2='7' interface='false' sourceFile='DAOCommentImpl.java' class='org.simple.blog.dao.implementations.blog.DAOCommentImpl'></ClassStats><ClassStats bugs='11' size='172' priority_2='11' interface='false' sourceFile='DAOPostImpl.java' class='org.simple.blog.dao.implementations.blog.DAOPostImpl'></ClassStats><ClassStats bugs='11' size='154' priority_2='11' interface='false' sourceFile='DAOUserImpl.java' class='org.simple.blog.dao.implementations.blog.DAOUserImpl'></ClassStats></PackageStats><PackageStats package='org.simple.blog.dao.interfaces.blog' total_bugs='0' total_size='40' total_types='3'><ClassStats bugs='0' size='11' interface='true' sourceFile='DAOComment.java' class='org.simple.blog.dao.interfaces.blog.DAOComment'></ClassStats><ClassStats bugs='0' size='17' interface='true' sourceFile='DAOPost.java' class='org.simple.blog.dao.interfaces.blog.DAOPost'></ClassStats><ClassStats bugs='0' size='12' interface='true' sourceFile='DAOUser.java' class='org.simple.blog.dao.interfaces.blog.DAOUser'></ClassStats></PackageStats><PackageStats package='org.simple.blog.entities.blog' total_bugs='0' total_size='170' total_types='5'><ClassStats bugs='0' size='45' interface='false' sourceFile='BlogComment.java' class='org.simple.blog.entities.blog.BlogComment'></ClassStats><ClassStats bugs='0' size='16' interface='false' sourceFile='BlogCommentSet.java' class='org.simple.blog.entities.blog.BlogCommentSet'></ClassStats><ClassStats bugs='0' size='40' interface='false' sourceFile='BlogPost.java' class='org.simple.blog.entities.blog.BlogPost'></ClassStats><ClassStats bugs='0' size='12' interface='false' sourceFile='BlogPostSet.java' class='org.simple.blog.entities.blog.BlogPostSet'></ClassStats><ClassStats bugs='0' size='57' interface='false' sourceFile='BlogUser.java' class='org.simple.blog.entities.blog.BlogUser'></ClassStats></PackageStats><PackageStats package='org.simple.blog.tools' total_bugs='0' total_size='109' total_types='4'><ClassStats bugs='0' size='66' interface='false' sourceFile='AppProperties.java' class='org.simple.blog.tools.AppProperties'></ClassStats><ClassStats bugs='0' size='10' interface='false' sourceFile='BlogConstants.java' class='org.simple.blog.tools.BlogConstants'></ClassStats><ClassStats bugs='0' size='28' interface='false' sourceFile='MailUtils.java' class='org.simple.blog.tools.MailUtils'></ClassStats><ClassStats bugs='0' size='5' interface='false' sourceFile='MailUtils.java' class='org.simple.blog.tools.MailUtils$1'></ClassStats></PackageStats><PackageStats package='org.simple.blog.tools.config' total_bugs='0' total_size='12' total_types='4'><ClassStats bugs='0' size='3' interface='false' sourceFile='DataSourceConfig.java' class='org.simple.blog.tools.config.DataSourceConfig'></ClassStats><ClassStats bugs='0' size='3' interface='false' sourceFile='DispatcherServletInitializer.java' class='org.simple.blog.tools.config.DispatcherServletInitializer'></ClassStats><ClassStats bugs='0' size='3' interface='false' sourceFile='FaviconConfiguration.java' class='org.simple.blog.tools.config.FaviconConfiguration'></ClassStats><ClassStats bugs='0' size='3' interface='false' sourceFile='MVCConfig.java' class='org.simple.blog.tools.config.MVCConfig'></ClassStats></PackageStats><PackageStats package='org.simple.blog.tools.custom.exceptions' total_bugs='0' total_size='40' total_types='4'><ClassStats bugs='0' size='10' interface='false' sourceFile='ConnectionFailedException.java' class='org.simple.blog.tools.custom.exceptions.ConnectionFailedException'></ClassStats><ClassStats bugs='0' size='10' interface='false' sourceFile='EntityParseException.java' class='org.simple.blog.tools.custom.exceptions.EntityParseException'></ClassStats><ClassStats bugs='0' size='10' interface='false' sourceFile='WrongEntityIdException.java' class='org.simple.blog.tools.custom.exceptions.WrongEntityIdException'></ClassStats><ClassStats bugs='0' size='10' interface='false' sourceFile='WrongLoginDataException.java' class='org.simple.blog.tools.custom.exceptions.WrongLoginDataException'></ClassStats></PackageStats><PackageStats package='org.simple.blog.tools.logger' total_bugs='0' total_size='6' total_types='1'><ClassStats bugs='0' size='6' interface='false' sourceFile='CustomLogger.java' class='org.simple.blog.tools.logger.CustomLogger'></ClassStats></PackageStats><PackageStats package='org.simple.blog.tools.strings' total_bugs='0' total_size='290' total_types='4'><ClassStats bugs='0' size='23' interface='false' sourceFile='AttributeName.java' class='org.simple.blog.tools.strings.AttributeName'></ClassStats><ClassStats bugs='0' size='33' interface='false' sourceFile='PageName.java' class='org.simple.blog.tools.strings.PageName'></ClassStats><ClassStats bugs='0' size='219' interface='false' sourceFile='Query.java' class='org.simple.blog.tools.strings.Query'></ClassStats><ClassStats bugs='0' size='15' interface='false' sourceFile='Strings.java' class='org.simple.blog.tools.strings.Strings'></ClassStats></PackageStats><FindBugsProfile><ClassProfile avgMicrosecondsPerInvocation='363' totalMilliseconds='282' name='edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine' maxMicrosecondsPerInvocation='16100' standardDeviationMicrosecondsPerInvocation='988' invocations='777'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1077' totalMilliseconds='131' name='edu.umd.cs.findbugs.detect.FieldItemSummary' maxMicrosecondsPerInvocation='11746' standardDeviationMicrosecondsPerInvocation='2005' invocations='122'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='162' totalMilliseconds='126' name='edu.umd.cs.findbugs.classfile.engine.ClassDataAnalysisEngine' maxMicrosecondsPerInvocation='1024' standardDeviationMicrosecondsPerInvocation='127' invocations='781'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1038' totalMilliseconds='126' name='edu.umd.cs.findbugs.detect.FindNoSideEffectMethods' maxMicrosecondsPerInvocation='12343' standardDeviationMicrosecondsPerInvocation='1951' invocations='122'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='487' totalMilliseconds='123' name='edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory' maxMicrosecondsPerInvocation='8006' standardDeviationMicrosecondsPerInvocation='772' invocations='253'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='451' totalMilliseconds='114' name='edu.umd.cs.findbugs.classfile.engine.bcel.ValueNumberDataflowFactory' maxMicrosecondsPerInvocation='13598' standardDeviationMicrosecondsPerInvocation='956' invocations='253'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='518' totalMilliseconds='107' name='edu.umd.cs.findbugs.ba.npe.NullDerefAndRedundantComparisonFinder' maxMicrosecondsPerInvocation='17408' standardDeviationMicrosecondsPerInvocation='1361' invocations='207'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='244' totalMilliseconds='106' name='edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory' maxMicrosecondsPerInvocation='12573' standardDeviationMicrosecondsPerInvocation='728' invocations='437'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='490' totalMilliseconds='101' name='com.h3xstream.findsecbugs.taintanalysis.TaintDataflowEngine' maxMicrosecondsPerInvocation='9070' standardDeviationMicrosecondsPerInvocation='863' invocations='207'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='397' totalMilliseconds='98' name='edu.umd.cs.findbugs.classfile.engine.bcel.MethodGenFactory' maxMicrosecondsPerInvocation='71203' standardDeviationMicrosecondsPerInvocation='4523' invocations='247'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='458' totalMilliseconds='94' name='edu.umd.cs.findbugs.classfile.engine.bcel.IsNullValueDataflowFactory' maxMicrosecondsPerInvocation='7136' standardDeviationMicrosecondsPerInvocation='737' invocations='207'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='2523' totalMilliseconds='90' name='com.h3xstream.findsecbugs.xml.XmlStreamReaderDetector' maxMicrosecondsPerInvocation='87304' standardDeviationMicrosecondsPerInvocation='14331' invocations='36'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='345' totalMilliseconds='85' name='edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory' maxMicrosecondsPerInvocation='15524' standardDeviationMicrosecondsPerInvocation='1048' invocations='247'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='354' totalMilliseconds='73' name='edu.umd.cs.findbugs.classfile.engine.bcel.UnconditionalValueDerefDataflowFactory' maxMicrosecondsPerInvocation='3821' standardDeviationMicrosecondsPerInvocation='489' invocations='207'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='287' totalMilliseconds='62' name='edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine' maxMicrosecondsPerInvocation='25161' standardDeviationMicrosecondsPerInvocation='1745' invocations='216'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='192' totalMilliseconds='47' name='edu.umd.cs.findbugs.classfile.engine.bcel.ValueRangeAnalysisFactory' maxMicrosecondsPerInvocation='40452' standardDeviationMicrosecondsPerInvocation='2573' invocations='247'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='364' totalMilliseconds='44' name='edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers' maxMicrosecondsPerInvocation='7842' standardDeviationMicrosecondsPerInvocation='820' invocations='122'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='313' totalMilliseconds='44' name='edu.umd.cs.findbugs.detect.FindRefComparison$SpecialTypeAnalysis' maxMicrosecondsPerInvocation='1897' standardDeviationMicrosecondsPerInvocation='333' invocations='141'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='291' totalMilliseconds='35' name='edu.umd.cs.findbugs.detect.BuildObligationPolicyDatabase' maxMicrosecondsPerInvocation='2163' standardDeviationMicrosecondsPerInvocation='422' invocations='122'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='45' totalMilliseconds='33' name='edu.umd.cs.findbugs.util.TopologicalSort' maxMicrosecondsPerInvocation='1005' standardDeviationMicrosecondsPerInvocation='77' invocations='735'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='263' totalMilliseconds='32' name='edu.umd.cs.findbugs.detect.BuildStringPassthruGraph' maxMicrosecondsPerInvocation='5068' standardDeviationMicrosecondsPerInvocation='612' invocations='122'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='252' totalMilliseconds='30' name='edu.umd.cs.findbugs.detect.OverridingEqualsNotSymmetrical' maxMicrosecondsPerInvocation='11251' standardDeviationMicrosecondsPerInvocation='1048' invocations='122'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='830' totalMilliseconds='29' name='edu.umd.cs.findbugs.detect.FindReturnRef' maxMicrosecondsPerInvocation='16295' standardDeviationMicrosecondsPerInvocation='2660' invocations='36'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='241' totalMilliseconds='29' name='edu.umd.cs.findbugs.detect.FunctionsThatMightBeMistakenForProcedures' maxMicrosecondsPerInvocation='3729' standardDeviationMicrosecondsPerInvocation='601' invocations='122'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='426' totalMilliseconds='27' name='edu.umd.cs.findbugs.classfile.impl.ZipCodeBaseFactory' maxMicrosecondsPerInvocation='1231' standardDeviationMicrosecondsPerInvocation='204' invocations='64'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='232' totalMilliseconds='26' name='edu.umd.cs.findbugs.ba.obl.ObligationAnalysis' maxMicrosecondsPerInvocation='2605' standardDeviationMicrosecondsPerInvocation='309' invocations='116'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='210' totalMilliseconds='25' name='edu.umd.cs.findbugs.detect.CalledMethods' maxMicrosecondsPerInvocation='2480' standardDeviationMicrosecondsPerInvocation='379' invocations='122'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='620' totalMilliseconds='22' name='edu.umd.cs.findbugs.detect.LoadOfKnownNullValue' maxMicrosecondsPerInvocation='4394' standardDeviationMicrosecondsPerInvocation='908' invocations='36'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='619' totalMilliseconds='22' name='edu.umd.cs.findbugs.detect.CheckRelaxingNullnessAnnotation' maxMicrosecondsPerInvocation='8612' standardDeviationMicrosecondsPerInvocation='1437' invocations='36'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='5' totalMilliseconds='20' name='edu.umd.cs.findbugs.ba.npe.TypeQualifierNullnessAnnotationDatabase' maxMicrosecondsPerInvocation='1561' standardDeviationMicrosecondsPerInvocation='37' invocations='3550'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='568' totalMilliseconds='20' name='edu.umd.cs.findbugs.detect.UnreadFields' maxMicrosecondsPerInvocation='3458' standardDeviationMicrosecondsPerInvocation='769' invocations='36'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='562' totalMilliseconds='20' name='edu.umd.cs.findbugs.detect.FindOpenStream' maxMicrosecondsPerInvocation='5134' standardDeviationMicrosecondsPerInvocation='1373' invocations='36'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='527' totalMilliseconds='18' name='edu.umd.cs.findbugs.detect.FindInconsistentSync2' maxMicrosecondsPerInvocation='4371' standardDeviationMicrosecondsPerInvocation='914' invocations='36'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='86' totalMilliseconds='17' name='edu.umd.cs.findbugs.classfile.engine.bcel.ConstantDataflowFactory' maxMicrosecondsPerInvocation='1177' standardDeviationMicrosecondsPerInvocation='116' invocations='207'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='135' totalMilliseconds='16' name='edu.umd.cs.findbugs.detect.ExplicitSerialization' maxMicrosecondsPerInvocation='4688' standardDeviationMicrosecondsPerInvocation='658' invocations='122'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='134' totalMilliseconds='16' name='edu.umd.cs.findbugs.detect.ReflectiveClasses' maxMicrosecondsPerInvocation='1485' standardDeviationMicrosecondsPerInvocation='242' invocations='122'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1' totalMilliseconds='16' name='edu.umd.cs.findbugs.DetectorToDetector2Adapter' maxMicrosecondsPerInvocation='432' standardDeviationMicrosecondsPerInvocation='5' invocations='9150'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='421' totalMilliseconds='15' name='edu.umd.cs.findbugs.detect.DumbMethods' maxMicrosecondsPerInvocation='3168' standardDeviationMicrosecondsPerInvocation='629' invocations='36'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='121' totalMilliseconds='14' name='edu.umd.cs.findbugs.detect.EqualsOperandShouldHaveClassCompatibleWithThis' maxMicrosecondsPerInvocation='1810' standardDeviationMicrosecondsPerInvocation='248' invocations='122'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='67' totalMilliseconds='14' name='edu.umd.cs.findbugs.detect.FindNullDeref$CheckCallSitesAndReturnInstructions' maxMicrosecondsPerInvocation='1007' standardDeviationMicrosecondsPerInvocation='101' invocations='207'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='388' totalMilliseconds='13' name='com.h3xstream.findsecbugs.password.ConstantPasswordDetector' maxMicrosecondsPerInvocation='5438' standardDeviationMicrosecondsPerInvocation='894' invocations='36'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='66' totalMilliseconds='13' name='edu.umd.cs.findbugs.classfile.engine.bcel.LiveLocalStoreDataflowFactory' maxMicrosecondsPerInvocation='894' standardDeviationMicrosecondsPerInvocation='88' invocations='207'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='342' totalMilliseconds='12' name='edu.umd.cs.findbugs.detect.FindUselessObjects' maxMicrosecondsPerInvocation='2871' standardDeviationMicrosecondsPerInvocation='528' invocations='36'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='341' totalMilliseconds='12' name='edu.umd.cs.findbugs.detect.FindDeadLocalStores' maxMicrosecondsPerInvocation='1914' standardDeviationMicrosecondsPerInvocation='411' invocations='36'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='330' totalMilliseconds='11' name='edu.umd.cs.findbugs.detect.FindNullDeref' maxMicrosecondsPerInvocation='3405' standardDeviationMicrosecondsPerInvocation='575' invocations='36'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='320' totalMilliseconds='11' name='edu.umd.cs.findbugs.detect.FindUseOfNonSerializableValue' maxMicrosecondsPerInvocation='1989' standardDeviationMicrosecondsPerInvocation='462' invocations='36'></ClassProfile></FindBugsProfile></FindBugsSummary><ClassFeatures></ClassFeatures><History></History></BugCollection>